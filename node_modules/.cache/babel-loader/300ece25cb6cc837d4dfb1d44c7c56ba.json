{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala/src/page/ShippingAddress/ShippingAddress.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Space, Form, Input, Row, Col, Select, message, Modal, Checkbox } from \"antd\";\nimport { CheckCircleFilled, ArrowLeftOutlined, RightOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n/* CUSTOM COMPONENT */\n\nimport { GlobleBox, WrapperSm } from \"../../component/Xcomponent\";\nimport CheckoutHeader from \"../../component/CheckoutHeader/CheckoutHeader\";\nimport { NextButton, AddressCard, Label, Xbadge, AddressValue, AddressButtonDiv, NewAddressCard, FlexDiv } from \"./ShippingAddressStyle\";\nimport CheckoutStep from \"../../component/CheckoutStep/CheckoutStep\"; // Actions\n\nimport { getCountryList, getCountryListReset } from \"../../action/getCountryListAction\";\nimport { getStateList, getStateListReset } from \"../../action/getStateListAction\";\nimport { saveCartAddress, saveCartAddressReset } from \"../../action/saveCartAddressAction\";\nimport { getCustomerAddress, getCustomerAddressReset } from \"../../action/getCustomerAddressAction\";\nimport { addCustomerAddress, addCustomerAddressReset } from \"../../action/addCustomerAddressAction\";\n/* others */\n\nimport { getCartId, getToken } from \"../../utils\";\nconst Option = Select.Option;\n\nconst ShippingAddress = props => {\n  //Variables\n  const {\n    getCountryList,\n    getCountryListReset,\n    getCountryListState,\n    getStateList,\n    getStateListReset,\n    getStateListState,\n    saveCartAddress,\n    saveCartAddressReset,\n    saveCartAddressState,\n    getCustomerAddress,\n    getCustomerAddresssReset,\n    getCustomerAddressState,\n    addCustomerAddress,\n    addCustomerAddresssReset,\n    addCustomerAddressState\n  } = props;\n  const [isSelectedAdd, setIsSelectedAdd] = useState('');\n  const [sameAsBilling, setSameAsBilling] = useState(false);\n  const [formData, setFormData] = useState({\n    type: \"shipping\",\n    fname: \"\",\n    lname: \"\",\n    company_name: \"\",\n    country: \"\",\n    country_id: \"\",\n    state: \"\",\n    city: \"\",\n    street: \"\",\n    landmark: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  const [form] = Form.useForm();\n  const [redirect, setRedirect] = useState(false);\n  const [showModal, setShowModal] = useState({\n    visible: false,\n    loading: false\n  });\n  const [countryIndia, setCountryIndia] = useState({});\n  let history = useHistory(); // Callback\n\n  useEffect(() => {\n    getCountryList();\n\n    if (!getToken()) {\n      setShowModal({ ...showModal,\n        ['visible']: true\n      });\n    } else {\n      getCustomerAddress({});\n    }\n  }, []);\n  useEffect(() => {\n    if (getCountryListState.apiState === \"success\") {\n      let country = _.find(getCountryListState.list, function (country) {\n        if (country.name === \"India\") {\n          return true;\n        }\n      });\n\n      setCountryIndia(country);\n    }\n  }, [getCountryListState]);\n  useEffect(() => {\n    getStateList({\n      country_id: formData.country_id\n    });\n  }, [formData.country_id]);\n  useEffect(() => {\n    if (saveCartAddressState.apiState === \"success\") {\n      message.success(saveCartAddressState.message);\n      saveCartAddressReset();\n      setRedirect(true);\n      form.resetFields();\n    } else if (saveCartAddressState.apiState === \"error\") {\n      message.error(\"Something went wrong. Please try later\");\n    }\n  }, [saveCartAddressState]);\n  useEffect(() => {\n    if (addCustomerAddressState.apiState === \"success\") {\n      message.success(addCustomerAddressState.message);\n      addCustomerAddressReset();\n      setShowModal({ ...showModal,\n        ['visible']: false\n      });\n      getCustomerAddress({});\n      setIsSelectedAdd('');\n      form.resetFields();\n    } else if (addCustomerAddressState.apiState === \"error\") {\n      message.error(\"Something went wrong. Please try later\");\n      addCustomerAddressReset();\n    }\n  }, [addCustomerAddressState]); //Function\n\n  const handleOnChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = (name, value, node) => {\n    if (name === 'country') {\n      setFormData({ ...formData,\n        [name]: node.children,\n        ['country_id']: value\n      });\n    } else {\n      setFormData({ ...formData,\n        [name]: value\n      });\n    }\n  };\n\n  const handleOnSubmit = () => {\n    form.validateFields().then(() => {\n      if (!getToken()) {\n        saveCartAddress({\n          cart_id: getCartId(),\n          ...formData\n        });\n      } else {\n        addCustomerAddress({\n          \"first_name\": formData['fname'],\n          \"last_name\": formData['lname'],\n          \"company_name\": formData['company_name'],\n          \"country\": formData['country'],\n          \"phone\": formData['phone'],\n          ...formData\n        });\n      }\n    });\n  };\n\n  const handleCancel = () => {\n    setShowModal({ ...showModal,\n      ['visible']: false\n    });\n    form.resetFields();\n  };\n\n  const setShippingAddress = () => {\n    var add = isSelectedAdd;\n\n    if (add === '' && sameAsBilling === false) {\n      message.error(\"Please Select Shipping Address\");\n    } else if (sameAsBilling === true) {\n      saveCartAddress({\n        cart_id: getCartId(),\n        \"same_as_billing\": sameAsBilling,\n        ...formData\n      });\n    } else {\n      saveCartAddress({\n        cart_id: getCartId(),\n        \"fname\": add.first_name,\n        \"lname\": add.last_name,\n        \"company_name\": add.company_name,\n        \"phone\": add.phone,\n        // \"email\":add.email,\n        \"country\": add.country,\n        \"state\": add.state,\n        \"city\": add.city,\n        \"street\": add.street,\n        \"landmark\": add.landmark,\n        \"zip_code\": add.zip_code,\n        \"type\": \"shipping\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, redirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/checkout/payment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(GlobleBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(WrapperSm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutStep, {\n    active: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Shipping Address\"), getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length > 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 124\n    }\n  }, \"Please Select Any one of the saved addresses\") : /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 203\n    }\n  }, \"Please Add a Address to continue\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"white\",\n      marginBottom: 40,\n      padding: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    size: \"large\",\n    style: {\n      display: \"flex\",\n      flexFlow: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, getCustomerAddressState.customer_address.map(address => {\n    return /*#__PURE__*/React.createElement(AddressCard, {\n      onClick: () => {\n        setIsSelectedAdd(address);\n      },\n      active: isSelectedAdd.id === address.id ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Xbadge, {\n      count: isSelectedAdd.id == address.id ? /*#__PURE__*/React.createElement(CheckCircleOutlined, {\n        style: {\n          color: '#52c41a'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 86\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, address.first_name, \" \", address.last_name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 92\n      }\n    }), /*#__PURE__*/React.createElement(AddressValue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, address.street, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 85\n      }\n    }), address.landmark != \"\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddressValue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 53\n      }\n    }, \"Landmark: \", address.landmark, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 111\n      }\n    })), /*#__PURE__*/React.createElement(AddressValue, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 37\n      }\n    }, address.city, \",\", address.state, \"  \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 138\n      }\n    }), /*#__PURE__*/React.createElement(AddressValue, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, \"  \", address.country, \" , \", address.zip_code), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 146\n      }\n    }), /*#__PURE__*/React.createElement(AddressValue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, address.phone), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 81\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(NewAddressCard, {\n    onClick: () => setShowModal({ ...showModal,\n      ['visible']: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 33\n    }\n  }, \"Add New Address\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 63\n    }\n  }))), /*#__PURE__*/React.createElement(Checkbox, {\n    style: {\n      \"margin\": 10\n    },\n    checked: sameAsBilling,\n    onChange: () => {\n      setSameAsBilling(true);\n      setIsSelectedAdd('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, \"Same as Billing Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      padding: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/checkout/billing`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    style: {\n      height: \"40px\",\n      backgroundColor: \"#eee\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ArrowLeftOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 113\n    }\n  }), \" GO BACK\")), \"\\xA0\", /*#__PURE__*/React.createElement(NextButton, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    onClick: () => {\n      setShippingAddress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, \"NEXT\", /*#__PURE__*/React.createElement(RightOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 38\n    }\n  })))))), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal.visible,\n    title: \"Add Shipping Address\",\n    onCancel: handleCancel,\n    onOk: handleOnSubmit,\n    okText: \"Add Address\",\n    cancelText: \"Cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"fname\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"fname\",\n    placeholder: \"Enter First Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"lname\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"lname\",\n    placeholder: \"Enter Last Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"company_name\",\n    label: \"Company Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"company_name\",\n    placeholder: \"Enter Company Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"country\",\n    label: \"Country\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"country\",\n    placeholder: \"Select Country\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    onChange: (v, node) => handleSelectChange(\"country\", v, node),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    key: countryIndia.id,\n    value: countryIndia.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 45\n    }\n  }, countryIndia.name), getCountryListState.list.map(country => /*#__PURE__*/React.createElement(Option, {\n    key: country.id,\n    value: country.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"state\",\n    label: \"State\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"state\",\n    placeholder: \"Select State\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    onChange: v => handleSelectChange(\"state\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 41\n    }\n  }, getStateListState.list.map(state => /*#__PURE__*/React.createElement(Option, {\n    key: state.name,\n    value: state.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 49\n    }\n  }, state.name))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"city\",\n    label: \"City\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    placeholder: \"Enter City\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"zip-code\",\n    label: \"PIN/ZIP Code\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip_code\",\n    placeholder: \"Enter PIN/ZIP CODE\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"street\",\n    label: \"Address\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"street\",\n    placeholder: \"Enter Plot/Flat no , Street Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"landmark\",\n    label: \"Landmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"landmark\",\n    placeholder: \"Enter Apartment, suite, unit, etc.\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"phone\",\n    label: \"Phone\",\n    maxLength: 15,\n    rules: [{\n      required: true,\n      message: 'Maximum 15 digits allowed',\n      pattern: /^[+\\da-zA-Z]{0,15}$/\n    }, {\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    placeholder: \"Enter Phone\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 41\n    }\n  })))))));\n};\n\nconst mapStateToProps = state => ({\n  saveCartAddressState: state.saveCartAddress,\n  getCountryListState: state.getCountryList,\n  getStateListState: state.getStateList,\n  getCustomerAddressState: state.getCustomerAddress,\n  addCustomerAddressState: state.addCustomerAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveCartAddress: params => dispatch(saveCartAddress(params)),\n  saveCartAddressReset: () => dispatch(saveCartAddressReset()),\n  getCountryList: params => dispatch(getCountryList(params)),\n  getCountryListReset: () => dispatch(getCountryListReset()),\n  getStateList: params => dispatch(getStateList(params)),\n  getStateListReset: () => dispatch(getStateListReset()),\n  getCustomerAddress: params => dispatch(getCustomerAddress(params)),\n  getCustomerAddressReset: () => dispatch(getCustomerAddressReset()),\n  addCustomerAddress: params => dispatch(addCustomerAddress(params)),\n  addCustomerAddressReset: () => dispatch(addCustomerAddressReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingAddress);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala/src/page/ShippingAddress/ShippingAddress.js"],"names":["React","useState","useEffect","Button","Space","Form","Input","Row","Col","Select","message","Modal","Checkbox","CheckCircleFilled","ArrowLeftOutlined","RightOutlined","CheckCircleOutlined","Link","Redirect","useHistory","connect","_","GlobleBox","WrapperSm","CheckoutHeader","NextButton","AddressCard","Label","Xbadge","AddressValue","AddressButtonDiv","NewAddressCard","FlexDiv","CheckoutStep","getCountryList","getCountryListReset","getStateList","getStateListReset","saveCartAddress","saveCartAddressReset","getCustomerAddress","getCustomerAddressReset","addCustomerAddress","addCustomerAddressReset","getCartId","getToken","Option","ShippingAddress","props","getCountryListState","getStateListState","saveCartAddressState","getCustomerAddresssReset","getCustomerAddressState","addCustomerAddresssReset","addCustomerAddressState","isSelectedAdd","setIsSelectedAdd","sameAsBilling","setSameAsBilling","formData","setFormData","type","fname","lname","company_name","country","country_id","state","city","street","landmark","phone","email","form","useForm","redirect","setRedirect","showModal","setShowModal","visible","loading","countryIndia","setCountryIndia","history","apiState","find","list","name","success","resetFields","error","handleOnChange","e","target","value","handleSelectChange","node","children","handleOnSubmit","validateFields","then","cart_id","handleCancel","setShippingAddress","add","first_name","last_name","zip_code","customer_address","length","color","background","marginBottom","padding","display","flexFlow","justifyContent","alignItems","map","address","id","textTransform","height","backgroundColor","required","input","option","toLowerCase","indexOf","v","pattern","mapStateToProps","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Button, Space, Form, Input, Row, Col, Select, message, Modal, Checkbox } from \"antd\"\nimport { CheckCircleFilled, ArrowLeftOutlined, RightOutlined , CheckCircleOutlined } from \"@ant-design/icons\"\nimport { Link, Redirect, useHistory } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport _ from \"lodash\"\n/* CUSTOM COMPONENT */\nimport { GlobleBox, WrapperSm } from \"../../component/Xcomponent\"\nimport CheckoutHeader from \"../../component/CheckoutHeader/CheckoutHeader\"\nimport { NextButton , AddressCard, Label, Xbadge, AddressValue, AddressButtonDiv ,NewAddressCard,FlexDiv } from \"./ShippingAddressStyle\"\nimport CheckoutStep from \"../../component/CheckoutStep/CheckoutStep\"\n\n// Actions\nimport { getCountryList, getCountryListReset } from \"../../action/getCountryListAction\"\nimport { getStateList, getStateListReset } from \"../../action/getStateListAction\"\nimport { saveCartAddress, saveCartAddressReset } from \"../../action/saveCartAddressAction\"\nimport { getCustomerAddress, getCustomerAddressReset } from \"../../action/getCustomerAddressAction\"\nimport { addCustomerAddress, addCustomerAddressReset } from \"../../action/addCustomerAddressAction\"\n\n\n/* others */\nimport { getCartId, getToken } from \"../../utils\"\n\nconst Option = Select.Option\n\nconst ShippingAddress = props => {\n    //Variables\n    const {\n        getCountryList, getCountryListReset, getCountryListState,\n        getStateList, getStateListReset, getStateListState,\n        saveCartAddress, saveCartAddressReset, saveCartAddressState,\n        getCustomerAddress, getCustomerAddresssReset, getCustomerAddressState,\n        addCustomerAddress, addCustomerAddresssReset, addCustomerAddressState,\n    } = props\n\n    const [isSelectedAdd, setIsSelectedAdd] = useState('')\n    const [sameAsBilling, setSameAsBilling] = useState(false)\n\n    const [formData, setFormData] = useState({\n        type: \"shipping\",\n        fname: \"\",\n        lname: \"\",\n        company_name: \"\",\n        country: \"\",\n        country_id: \"\",\n        state: \"\",\n        city: \"\",\n        street: \"\",\n        landmark: \"\",\n        phone: \"\",\n        email: \"\",\n    })\n    const [form] = Form.useForm();\n\n    const [redirect, setRedirect] = useState(false)\n    const [showModal, setShowModal] = useState({\n        visible: false,\n        loading: false\n    })\n\n    const [countryIndia, setCountryIndia] = useState({})\n\n\n    let history = useHistory()\n    // Callback\n    useEffect(() => {\n        getCountryList()\n        if (!getToken()){\n            setShowModal({ ...showModal, ['visible']: true })\n        }\n        else{\n            getCustomerAddress({})\n        }\n    }, [])\n\n    useEffect(() => {\n        if (getCountryListState.apiState === \"success\"){\n            let country = _.find(getCountryListState.list, function(country) {\n                if (country.name === \"India\") {\n                    return true;\n                }\n            })\n            setCountryIndia(country)\n        }\n    }, [getCountryListState])\n\n    useEffect(() => {\n        getStateList({\n            country_id: formData.country_id\n        })\n    }, [formData.country_id])\n\n    useEffect(() => {\n        if (saveCartAddressState.apiState === \"success\") {\n            message.success(saveCartAddressState.message);\n            saveCartAddressReset()\n            setRedirect(true)\n            form.resetFields()\n        }\n        else if (saveCartAddressState.apiState === \"error\") {\n            message.error(\"Something went wrong. Please try later\");\n        }\n    }, [saveCartAddressState])\n\n    useEffect(() => {\n        if (addCustomerAddressState.apiState === \"success\") {\n            message.success(addCustomerAddressState.message);\n            addCustomerAddressReset()\n            setShowModal({ ...showModal, ['visible']: false })\n            getCustomerAddress({})\n            setIsSelectedAdd('')\n            form.resetFields()\n        }\n        else if (addCustomerAddressState.apiState === \"error\") {\n            message.error(\"Something went wrong. Please try later\");\n            addCustomerAddressReset()\n        }\n    }, [addCustomerAddressState])\n\n    //Function\n    const handleOnChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n\n    const handleSelectChange = (name, value, node) => {\n        if (name === 'country') {\n            setFormData({ ...formData, [name]: node.children, ['country_id']: value })\n        } else {\n            setFormData({ ...formData, [name]: value })\n        }\n    }\n\n    const handleOnSubmit = () => {\n        form.validateFields().then (()=>{\n        if (!getToken()){\n            saveCartAddress({\n                cart_id: getCartId(),\n                ...formData\n            })\n        }\n        else{\n            addCustomerAddress({\n                \"first_name\":formData['fname'],\n                \"last_name\":formData['lname'],\n                \"company_name\":formData['company_name'],\n                \"country\":formData['country'],\n                \"phone\":formData['phone'],\n                ...formData\n            })\n        }})\n    }\n\n    const handleCancel = () => {\n        setShowModal({ ...showModal, ['visible']: false })\n        form.resetFields()\n    }\n\n    \n    const setShippingAddress = () => {\n        var add = isSelectedAdd\n        if (add === '' && sameAsBilling === false){\n            message.error(\"Please Select Shipping Address\");\n        }\n        else if(sameAsBilling === true){\n            saveCartAddress({\n                cart_id: getCartId(),\n                \"same_as_billing\": sameAsBilling,\n                ...formData\n            })\n        }\n        else{\n            saveCartAddress({\n                cart_id: getCartId(),\n                \"fname\":add.first_name,\n                \"lname\":add.last_name,\n                \"company_name\":add.company_name,\n                \"phone\":add.phone,\n                // \"email\":add.email,\n                \"country\":add.country,\n                \"state\":add.state,\n                \"city\":add.city,\n                \"street\":add.street,\n                \"landmark\":add.landmark,\n                \"zip_code\":add.zip_code,\n                \"type\":\"shipping\"\n            })\n        }\n    }\n\n    return (\n        <>\n            {redirect &&\n                <Redirect to=\"/checkout/payment\" />\n            }\n            <GlobleBox>\n                <WrapperSm>\n                    <CheckoutStep active={2} />\n                    <h1>Shipping Address</h1>\n                    { getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length>0 ? <h3 style={{color:\"gray\"}}>Please Select Any one of the saved addresses</h3> : <h3 style={{color:\"gray\"}}>Please Add a Address to continue</h3> }\n\n                    <div style={{ background: \"white\", marginBottom: 40, padding: 16 }} >\n                    <Space size=\"large\" style={{ display: \"flex\", flexFlow: \"wrap\" , justifyContent: \"center\", alignItems: \"center\" }}>\n                    {getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length>0 &&\n                        <>\n                            {getCustomerAddressState.customer_address.map(address =>{\n                                return (<AddressCard \n                                onClick={()=>{setIsSelectedAdd(address)}}\n                                active={ isSelectedAdd.id === address.id ? true : false}>  \n                                    <Xbadge count={ isSelectedAdd.id == address.id ? <CheckCircleOutlined style={{ color: '#52c41a' }} /> : \"\"}>\n                                    </Xbadge>\n                                    <Label>{address.first_name} {address.last_name}</Label><br />\n                                    <AddressValue >{address.street} </AddressValue> <br/>\n                                    {address.landmark != \"\" && (\n                                                <>\n                                                    <AddressValue>Landmark: {address.landmark} </AddressValue><br />\n                                                </>\n                                            )}\n                                    <AddressValue style={{ textTransform: \"uppercase\" }} >{address.city},{address.state}  </AddressValue><br/>\n                                    <AddressValue style={{ textTransform: \"uppercase\" }} >  {address.country} , {address.zip_code}</AddressValue><br />\n                                    <AddressValue>{address.phone}</AddressValue><br />\n                                    {/* <AddressValue>{address.email}</AddressValue> */}\n                            </AddressCard>)\n                                })} \n                            </>\n                            }\n                            \n                            <NewAddressCard onClick={()=>setShowModal({...showModal,['visible']:true})}>\n                                <Label>Add New Address</Label><br />\n                            </NewAddressCard>\n                        </Space>\n                        <Checkbox style={{\"margin\":10}} \n                        checked={sameAsBilling}\n                        onChange={()=>{\n                            setSameAsBilling(true)\n                            setIsSelectedAdd('')\n                        }}\n                        >\n                            Same as Billing Address\n                        </Checkbox>\n                        <div style={{ display: \"flex\", justifyContent: \"center\" ,  padding: \"15px\"}} >\n                                <Link to={`/checkout/billing`}  >\n                                    <Button type=\"default\" style={{ height: \"40px\", backgroundColor: \"#eee\" }} ><ArrowLeftOutlined /> GO BACK</Button>\n                                 </Link>\n                                \n                                &nbsp;\n                                <NextButton type=\"primary\" htmlType=\"submit\" \n                                  onClick={()=>{setShippingAddress()}}\n                                >NEXT<RightOutlined /></NextButton>\n                        </div>\n\n                        \n                    </div>\n                </WrapperSm>\n            </GlobleBox>\n            {/* modal */}\n\n            <Modal\n                visible={showModal.visible}\n                title=\"Add Shipping Address\"\n                onCancel={handleCancel}\n                onOk={handleOnSubmit}\n                okText={\"Add Address\"}\n                cancelText={\"Cancel\"}\n            > \n                    <Form form={form} layout=\"vertical\">\n                            <Row gutter=\"24\">\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                    \n                                        name=\"fname\"\n                                        label=\"First Name\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"fname\" placeholder=\"Enter First Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                   \n                                        name=\"lname\"\n                                        label=\"Last Name\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"lname\" placeholder=\"Enter Last Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"company_name\"\n                                        label=\"Company Name\"\n                                    >\n                                        <Input name=\"company_name\" placeholder=\"Enter Company Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"country\"\n                                        label=\"Country\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select\n                                            name=\"country\"\n                                            placeholder=\"Select Country\"\n                                            showSearch \n                                            allowClear\n                                            filterOption={(input, option) =>\n                                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            onChange={(v, node) => handleSelectChange(\"country\", v, node)}\n                                        >\n                                            <Option key={countryIndia.id} value={countryIndia.id}>{countryIndia.name}</Option>\n                                            {getCountryListState.list.map(country => (\n                                                <Option key={country.id} value={country.id}>{country.name}</Option>\n                                            ))}\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"state\"\n                                        label=\"State\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select\n                                            name=\"state\"\n                                            placeholder=\"Select State\"\n                                            showSearch\n                                            allowClear\n                                            filterOption={(input, option) =>\n                                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            onChange={(v) => handleSelectChange(\"state\", v)}\n                                        >\n                                            {getStateListState.list.map(state => (\n                                                <Option key={state.name} value={state.name}>{state.name}</Option>\n                                            ))}\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"city\"\n                                        label=\"City\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"city\" placeholder=\"Enter City\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"zip-code\"\n                                        label=\"PIN/ZIP Code\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"zip_code\" placeholder=\"Enter PIN/ZIP CODE\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"street\"\n                                        label=\"Address\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"street\" placeholder=\"Enter Plot/Flat no , Street Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"landmark\"\n                                        label=\"Landmark\"\n                                    >\n                                        <Input name=\"landmark\" placeholder=\"Enter Apartment, suite, unit, etc.\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"phone\"\n                                        label=\"Phone\"\n                                        maxLength={15}\n                                        rules={[\n                                            { required: true, message: 'Maximum 15 digits allowed',\n                                            pattern: /^[+\\da-zA-Z]{0,15}$/, },\n                                            {required: true, message: 'Required',}\n                                        ]}\n                                    >\n                                        <Input name=\"phone\" placeholder=\"Enter Phone\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                \n                            </Row>\n                        </Form>\n            </Modal>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    saveCartAddressState: state.saveCartAddress,\n    getCountryListState: state.getCountryList,\n    getStateListState: state.getStateList,\n    getCustomerAddressState: state.getCustomerAddress,\n    addCustomerAddressState: state.addCustomerAddress,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    saveCartAddress: (params) => dispatch(saveCartAddress(params)),\n    saveCartAddressReset: () => dispatch(saveCartAddressReset()),\n    getCountryList: (params) => dispatch(getCountryList(params)),\n    getCountryListReset: () => dispatch(getCountryListReset()),\n    getStateList: (params) => dispatch(getStateList(params)),\n    getStateListReset: () => dispatch(getStateListReset()),\n    getCustomerAddress: (params) => dispatch(getCustomerAddress(params)),\n    getCustomerAddressReset: () => dispatch(getCustomerAddressReset()),    \n    addCustomerAddress: (params) => dispatch(addCustomerAddress(params)),\n    addCustomerAddressReset: () => dispatch(addCustomerAddressReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingAddress)"]},"metadata":{},"sourceType":"module"}