{"ast":null,"code":"import _defineProperty from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import{Button,Space,Form,Input,Row,Col,Select,message}from\"antd\";import{Link,Redirect}from\"react-router-dom\";// custom component\nimport Footer from\"../../component/Footer/Footer\";import{MainBox}from\"./ResetPasswordStyle\";// action   \nimport{resetPassword as _resetPassword,resetPasswordReset as _resetPasswordReset}from\"../../action/resetPasswordAction\";var ResetPassword=function ResetPassword(props){// variables & states \nvar resetPassword=props.resetPassword,resetPasswordReset=props.resetPasswordReset,resetPasswordState=props.resetPasswordState;var customer_id=props.match.params.customer_id;var _useState=useState(false,\"\"),_useState2=_slicedToArray(_useState,2),redirect=_useState2[0],setRedirect=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),otpScreen=_useState4[0],setOtpScreen=_useState4[1];var _useState5=useState({password:\"\",confirm:\"\"}),_useState6=_slicedToArray(_useState5,2),formData=_useState6[0],setFormData=_useState6[1];// functions \nvar handleOnChange=function handleOnChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var handleOnSubmit=function handleOnSubmit(){resetPassword(_objectSpread({customer_id:customer_id},formData));};useEffect(function(){if(resetPasswordState.apiState===\"success\"){message.success(resetPasswordState.message);setRedirect([true,'/']);resetPasswordReset();}else if(resetPasswordState.apiState===\"error\"){message.error(\"Something went wrong. Please try later\");}},[resetPasswordState]);return/*#__PURE__*/React.createElement(React.Fragment,null,redirect[0]&&/*#__PURE__*/React.createElement(Redirect,{to:redirect[1]}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\",paddingTop:16}},/*#__PURE__*/React.createElement(\"h1\",{style:{fontSize:24,fontWeight:\"bold\"}},\"Reset Password\")),/*#__PURE__*/React.createElement(MainBox,null,/*#__PURE__*/React.createElement(\"div\",{style:{background:\"white\",marginBottom:40,padding:16}},/*#__PURE__*/React.createElement(Form,{onFinish:handleOnSubmit,layout:\"vertical\"},/*#__PURE__*/React.createElement(Row,{gutter:\"24\"},/*#__PURE__*/React.createElement(Col,{xs:24,sm:24,md:24,lg:24,xl:24},/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Please input your password!'}]},/*#__PURE__*/React.createElement(Input,{name:\"password\",placeholder:\"Enter Password\",onChange:handleOnChange}))),/*#__PURE__*/React.createElement(Col,{xs:24,sm:24,md:24,lg:24,xl:24},/*#__PURE__*/React.createElement(Form.Item,{name:\"confirm\",label:\"Confirm Password\",dependencies:['password'],rules:[{required:true,message:'Please confirm your password!'},function(_ref){var getFieldValue=_ref.getFieldValue;return{validator:function validator(_,value){if(!value||getFieldValue('password')===value){return Promise.resolve();}return Promise.reject(new Error('The passwords that you entered do not match!'));}};}]},/*#__PURE__*/React.createElement(Input,{name:\"confirm\",placeholder:\"Confirm Password\",onChange:handleOnChange})))),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},/*#__PURE__*/React.createElement(Button,{type:\"primary\",loading:resetPasswordState.apiState===\"loading\",block:true,size:\"large\",htmlType:\"submit\"},\"Set Password\")))))));};var mapStateToProps=function mapStateToProps(state){return{resetPasswordState:state.resetPassword};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{resetPassword:function resetPassword(params){return dispatch(_resetPassword(params));},resetPasswordReset:function resetPasswordReset(){return dispatch(_resetPasswordReset());}};};export default connect(mapStateToProps,mapDispatchToProps)(ResetPassword);","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/page/ResetPassword/ResetPassword.js"],"names":["React","useEffect","useState","connect","Button","Space","Form","Input","Row","Col","Select","message","Link","Redirect","Footer","MainBox","resetPassword","resetPasswordReset","ResetPassword","props","resetPasswordState","customer_id","match","params","redirect","setRedirect","otpScreen","setOtpScreen","password","confirm","formData","setFormData","handleOnChange","e","target","name","value","handleOnSubmit","apiState","success","error","textAlign","paddingTop","fontSize","fontWeight","background","marginBottom","padding","required","getFieldValue","validator","_","Promise","resolve","reject","Error","display","justifyContent","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Space, Form, Input, Row, Col, Select, message } from \"antd\"\nimport { Link, Redirect } from \"react-router-dom\"\n// custom component\nimport Footer from \"../../component/Footer/Footer\"\nimport { MainBox } from \"./ResetPasswordStyle\"\n// action   \nimport { resetPassword, resetPasswordReset } from \"../../action/resetPasswordAction\"\nconst ResetPassword = props => {\n    // variables & states \n    const {\n        resetPassword, resetPasswordReset, resetPasswordState,\n    } = props\n    const customer_id = props.match.params.customer_id\n    const [redirect, setRedirect] = useState(false, \"\")\n    const [otpScreen, setOtpScreen] = useState(false)\n    const [formData, setFormData] = useState({\n        password: \"\",\n        confirm: \"\",\n    })\n\n    // functions \n    const handleOnChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n\n    const handleOnSubmit = () => {\n        resetPassword({\n            customer_id: customer_id,\n            ...formData\n        })\n    }\n    useEffect(() => {\n        if (resetPasswordState.apiState === \"success\") {\n            message.success(resetPasswordState.message);\n            setRedirect([true, '/'])\n            resetPasswordReset()\n        }\n        else if (resetPasswordState.apiState === \"error\") {\n            message.error(\"Something went wrong. Please try later\");\n        }\n    }, [resetPasswordState])\n\n    return (\n        <>\n            {redirect[0] &&\n                <Redirect to={redirect[1]} />\n            }\n            <div>\n                <div style={{ textAlign: \"center\", paddingTop: 16 }} >\n                    <h1 style={{ fontSize: 24, fontWeight: \"bold\" }} >Reset Password</h1>\n                </div>\n                <MainBox>\n\n                    <div style={{ background: \"white\", marginBottom: 40, padding: 16 }} >\n                        <Form onFinish={handleOnSubmit} layout=\"vertical\">\n                            <Row gutter=\"24\">\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        rules={[\n                                            { required: true, message: 'Please input your password!' },\n                                        ]}\n                                    >\n                                        <Input name=\"password\" placeholder=\"Enter Password\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                        name=\"confirm\"\n                                        label=\"Confirm Password\"\n                                        dependencies={['password']}\n                                        rules={[\n                                            { required: true, message: 'Please confirm your password!' },\n                                            ({ getFieldValue }) => ({\n                                                validator(_, value) {\n                                                    if (!value || getFieldValue('password') === value) {\n                                                        return Promise.resolve();\n                                                    }\n                                                    return Promise.reject(new Error('The passwords that you entered do not match!'));\n                                                },\n                                            }),\n                                        ]}\n                                    >\n                                        <Input name=\"confirm\" placeholder=\"Confirm Password\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                            <div style={{ display: \"flex\", justifyContent: \"center\" }} >\n                                <Button type=\"primary\" loading={resetPasswordState.apiState === \"loading\"} block size=\"large\" htmlType=\"submit\"\n                                >Set Password</Button>\n                            </div>\n                        </Form>\n                    </div>\n\n                </MainBox>\n            </div>\n           \n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    resetPasswordState: state.resetPassword,\n})\nconst mapDispatchToProps = (dispatch) => ({\n    resetPassword: (params) => dispatch(resetPassword(params)),\n    resetPasswordReset: () => dispatch(resetPasswordReset()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword)\n"]},"metadata":{},"sourceType":"module"}