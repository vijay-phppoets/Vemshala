{"ast":null,"code":"var _jsxFileName = \"/home/coder-kabir/Documents/GitHub/Vemshala/src/page/Orders/Orders.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, Table, Tag, Button } from 'antd';\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n/* CUSTOM COMPONENTS */\n\nimport { GlobleBox, Wrapper } from \"../../component/Xcomponent\";\nimport { Container } from \"./OrdersStyle\";\nimport ProfileMenu from '../../component/ProfileMenu/ProfileMenu';\nimport { DownloadOutlined, CopyOutlined } from \"@ant-design/icons\";\n/* ACTIONS */\n\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\"; // import { getInvoice, getInvoiceReset } from \"../../action/getInvoiceAction\"\n\n/* Others */\n\nimport { pad, inr, getCustomer } from \"../../utils\";\n\nconst Orders = props => {\n  /* variable & state */\n  const {\n    getOrderList,\n    getOrderListReset,\n    getOrderListState // getInvoice, getInvoiceReset, getInvoiceState,\n\n  } = props;\n  const columns = [{\n    title: 'Order Date',\n    dataIndex: 'order_date',\n    key: 'order_date',\n    render: order_date => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        whiteSpace: \"nowrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 35\n      }\n    }, order_date)\n  }, {\n    title: 'Order Number',\n    dataIndex: 'order_number',\n    key: 'order_number',\n    render: obj => /*#__PURE__*/React.createElement(Link, {\n      to: `/order/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }\n    }, obj.order_number)\n  }, {\n    title: 'Payment Mode',\n    dataIndex: 'payment_mode',\n    key: 'payment_mode'\n  }, {\n    title: 'Total',\n    dataIndex: 'total',\n    key: 'total'\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => /*#__PURE__*/React.createElement(Tag, {\n      color: \"#87d068\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }\n    }, status.toUpperCase())\n  }, {\n    title: 'Action',\n    dataIndex: 'datas',\n    key: 'action',\n    render: obj => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `/order/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(CopyOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 78\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 51\n      }\n    }), \"View\"), \"\\xA0\", obj.status == \"delivered\" ? /*#__PURE__*/React.createElement(Link, {\n      to: `/invoice/${obj.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(DownloadOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 82\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 55\n      }\n    }), \" Invoice\") : \"\")\n  }];\n  const [dataSource, setDataSource] = useState([]);\n  /* callbacks */\n\n  useEffect(() => {\n    getOrderList();\n  }, []);\n  useEffect(() => {\n    if (getOrderListState.apiState === 'success' && getOrderListState.list.length > 0) {\n      let tableData = [];\n      getOrderListState.list.map(row => {\n        tableData.push({\n          order_date: row.order_date ? moment(row.order_date, 'YYYY-MM-DD').format('DD-MMM-YYYY') : \"NOT PLACED\",\n          order_number: {\n            order_number: row.order_no ? pad(row.order_no, 6) : \"000000\",\n            id: row.id\n          },\n          payment_mode: row.payment_mode ? row.payment_mode.toUpperCase() : row.payment_mode,\n          total: `â‚¹${inr(row.total)}`,\n          status: row.status,\n          datas: {\n            \"id\": row.id,\n            \"status\": row.status\n          }\n        });\n      });\n      setDataSource(tableData);\n    }\n  }, [getOrderListState]); // const handleDownload = (id) =>{\n  //     getInvoice({\n  //         card_id:id,\n  //         customer_id:getCustomer().id\n  //     });\n  // }\n  // useEffect(() => {\n  //     if (getInvoiceState.apiState === 'success') {\n  //     }\n  // }, [getInvoiceState])\n\n  return /*#__PURE__*/React.createElement(GlobleBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 6,\n    lg: 6,\n    xl: 6,\n    style: {\n      padding: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ProfileMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 18,\n    lg: 18,\n    xl: 18,\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"Orders\"), /*#__PURE__*/React.createElement(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    pagination: false,\n    scroll: {\n      x: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst mapStateToProps = state => ({\n  getOrderListState: state.getOrderList // getInvoiceState: state.getInvoice, \n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getOrderList: params => dispatch(getOrderList(params)),\n  getOrderListReset: () => dispatch(getOrderListReset()) // getInvoice: (params) => dispatch(getInvoice(params)),\n  // getInvoiceReset: () => dispatch(getInvoiceReset()),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/page/Orders/Orders.js"],"names":["React","useEffect","useState","Row","Col","Table","Tag","Button","connect","moment","Link","GlobleBox","Wrapper","Container","ProfileMenu","DownloadOutlined","CopyOutlined","getOrderList","getOrderListReset","pad","inr","getCustomer","Orders","props","getOrderListState","columns","title","dataIndex","key","render","order_date","whiteSpace","obj","id","order_number","status","toUpperCase","dataSource","setDataSource","apiState","list","length","tableData","map","row","push","format","order_no","payment_mode","total","datas","padding","display","justifyContent","x","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Row, Col, Table, Tag, Button } from 'antd';\nimport { connect } from \"react-redux\"\nimport moment from 'moment'\nimport { Link } from 'react-router-dom' \n/* CUSTOM COMPONENTS */\nimport { GlobleBox, Wrapper } from \"../../component/Xcomponent\"\nimport { Container } from \"./OrdersStyle\"\nimport ProfileMenu from '../../component/ProfileMenu/ProfileMenu';\nimport {  DownloadOutlined, CopyOutlined} from \"@ant-design/icons\"\n/* ACTIONS */\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\"\n// import { getInvoice, getInvoiceReset } from \"../../action/getInvoiceAction\"\n\n/* Others */\nimport { pad, inr,getCustomer } from \"../../utils\"\n\nconst Orders = props => {\n    /* variable & state */\n    const {\n        getOrderList, getOrderListReset, getOrderListState,\n        // getInvoice, getInvoiceReset, getInvoiceState,\n    } = props\n    const columns = [\n        {\n            title: 'Order Date',\n            dataIndex: 'order_date',\n            key: 'order_date',\n            render: order_date => <span style={{ whiteSpace: \"nowrap\" }} >{order_date}</span>\n        },\n        {\n            title: 'Order Number',\n            dataIndex: 'order_number',\n            key: 'order_number',\n            render: obj => <Link to={`/order/${obj.id}`} >{obj.order_number}</Link>\n        },\n        {\n            title: 'Payment Mode',\n            dataIndex: 'payment_mode',\n            key: 'payment_mode',\n        },\n        {\n            title: 'Total',\n            dataIndex: 'total',\n            key: 'total',\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (<Tag color=\"#87d068\">{status.toUpperCase()}</Tag>)\n        },\n        {\n            title: 'Action',\n            dataIndex: 'datas',\n            key: 'action',\n            render: (obj) => (\n                <> \n                    <Link to={`/order/${obj.id}`}><Button size=\"small\" icon={<CopyOutlined />} />View</Link>\n                    &nbsp;\n                    { obj.status == \"delivered\"?\n                    ( <Link to={`/invoice/${obj.id}`}><Button size=\"small\" icon={<DownloadOutlined />} /> Invoice</Link>) \n                    :\"\" }\n                </>\n            )\n        }\n    ];\n    const [dataSource, setDataSource] = useState([])\n\n    /* callbacks */\n    useEffect(() => {\n        getOrderList()\n    }, [])\n\n    useEffect(() => {\n        if (getOrderListState.apiState === 'success' &&  getOrderListState.list.length > 0 ) {\n            let tableData = []\n            getOrderListState.list.map(row => {\n                tableData.push({\n                    order_date: row.order_date? moment(row.order_date, 'YYYY-MM-DD').format('DD-MMM-YYYY'): \"NOT PLACED\",\n                    order_number: { order_number: row.order_no? pad(row.order_no, 6): \"000000\", id: row.id },\n                    payment_mode: row.payment_mode? row.payment_mode.toUpperCase(): row.payment_mode,\n                    total: `â‚¹${inr(row.total)}`,\n                    status: row.status, \n                    datas: { \"id\": row.id, \"status\": row.status, },\n                })\n            })\n            setDataSource(tableData)\n        }\n    }, [getOrderListState])\n\n    // const handleDownload = (id) =>{\n    //     getInvoice({\n    //         card_id:id,\n    //         customer_id:getCustomer().id\n    //     });\n    // }\n    // useEffect(() => {\n         \n    //     if (getInvoiceState.apiState === 'success') {\n            \n    //     }\n    // }, [getInvoiceState])\n    return (\n        <GlobleBox>\n            <Wrapper>\n                <Row gutter='12' >\n                    <Col xs={24} sm={24} md={6} lg={6} xl={6} style={{ padding: 16 }} >\n                        <ProfileMenu />\n                    </Col>\n                    <Col xs={24} sm={24} md={18} lg={18} xl={18} style={{ display: 'flex', justifyContent: 'center' }} >\n                        <Container>\n                            <h3>Orders</h3>\n                            <Table dataSource={dataSource} columns={columns}\n                                pagination={false} scroll={{ x: 500 }}\n                            />\n                        </Container>\n                    </Col>\n                </Row>\n            </Wrapper>\n        </GlobleBox>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getOrderListState: state.getOrderList,\n    // getInvoiceState: state.getInvoice, \n})\nconst mapDispatchToProps = (dispatch) => ({\n    getOrderList: (params) => dispatch(getOrderList(params)),\n    getOrderListReset: () => dispatch(getOrderListReset()), \n    // getInvoice: (params) => dispatch(getInvoice(params)),\n    // getInvoiceReset: () => dispatch(getInvoiceReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n"]},"metadata":{},"sourceType":"module"}