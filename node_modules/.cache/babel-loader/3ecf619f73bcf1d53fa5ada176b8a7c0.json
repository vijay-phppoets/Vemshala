{"ast":null,"code":"import _regeneratorRuntime from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(placeCodOrderSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(MySaga);import{call,put,takeLatest}from'redux-saga/effects';import{PLACE_COD_ORDER,placeCodOrderSuccess,placeCodOrderFail}from'../action/placeCodOrderAction';import placeCodOrderApi from'../api/placeCodOrderApi';export function placeCodOrderSaga(action){var response;return _regeneratorRuntime.wrap(function placeCodOrderSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(function(){return placeCodOrderApi(action.params);});case 3:response=_context.sent;_context.next=6;return put(placeCodOrderSuccess(response,action));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(placeCodOrderFail(_context.t0.response,action));case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}export default function MySaga(){return _regeneratorRuntime.wrap(function MySaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(PLACE_COD_ORDER,placeCodOrderSaga);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/saga/placeCodOrderSaga.js"],"names":["placeCodOrderSaga","MySaga","call","put","takeLatest","PLACE_COD_ORDER","placeCodOrderSuccess","placeCodOrderFail","placeCodOrderApi","action","params","response"],"mappings":"2MAUiBA,iB,iDASQC,M,EAnBzB,OAASC,IAAT,CAAeC,GAAf,CAAoBC,UAApB,KAAsC,oBAAtC,CAEA,OACIC,eADJ,CAEIC,oBAFJ,CAGIC,iBAHJ,KAIO,+BAJP,CAMA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CAEA,MAAO,SAAUR,CAAAA,iBAAV,CAA4BS,MAA5B,yKAEkB,MAAMP,CAAAA,IAAI,CAAC,iBAAMM,CAAAA,gBAAgB,CAACC,MAAM,CAACC,MAAR,CAAtB,EAAD,CAAV,CAFlB,OAEOC,QAFP,+BAGC,MAAMR,CAAAA,GAAG,CAACG,oBAAoB,CAACK,QAAD,CAAWF,MAAX,CAArB,CAAT,CAHD,uGAKC,MAAMN,CAAAA,GAAG,CAACI,iBAAiB,CAAC,YAAEI,QAAH,CAAaF,MAAb,CAAlB,CAAT,CALD,oEASP,cAAe,SAAUR,CAAAA,MAAV,sIACX,MAAMG,CAAAA,UAAU,CAACC,eAAD,CAAkBL,iBAAlB,CAAhB,CADW","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n    PLACE_COD_ORDER,\n    placeCodOrderSuccess,\n    placeCodOrderFail\n} from '../action/placeCodOrderAction'\n\nimport placeCodOrderApi from '../api/placeCodOrderApi'\n\nexport function* placeCodOrderSaga(action) {\n    try {\n        const response = yield call(() => placeCodOrderApi(action.params))\n        yield put(placeCodOrderSuccess(response, action))\n    } catch (e) {\n        yield put(placeCodOrderFail(e.response, action))\n    }\n}\n\nexport default function* MySaga() {\n    yield takeLatest(PLACE_COD_ORDER, placeCodOrderSaga)\n}"]},"metadata":{},"sourceType":"module"}