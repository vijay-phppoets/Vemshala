{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala/src/component/AccountDrawer/AccountDrawer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { connect } from \"react-redux\";\nimport { Form, Input, Divider, message } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { HeartOutlined, UserOutlined, UnorderedListOutlined, LogoutOutlined, GoogleOutlined } from \"@ant-design/icons\";\n/* custom component */\n\nimport { AccDrawer, AccountLi, AccountUl } from \"./AccountDrawerStyle\";\nimport { BlackBtn, RedBtn } from \"../../component/Xcomponent\";\nimport GoogleLogin from \"react-google-login\";\nimport GoogleButton from 'react-google-button';\n/* actions */\n\nimport { toggleSignupModal, setCustomerData, setUserLoggedIn, setUserLoggedOut, hideSignupModal, showSignupModal } from \"../../action/generalAction\";\nimport { login, loginReset } from \"../../action/loginAction\";\nimport { createCustomer, createCustomerReset } from \"../../action/createCustomerAction\";\n/* other */\n\nimport { getCustomer, setToken, setCustomer, removeCustomer, removeToken, getCartId } from '../../utils';\n\nconst AccountDrawer = props => {\n  /* variable and state */\n  const location = useLocation();\n  const {\n    toggleSignupModal,\n    showSignupModal,\n    hideSignupModal,\n    setCustomerData,\n    setUserLoggedIn,\n    setUserLoggedOut,\n    generalState,\n    login,\n    loginReset,\n    loginState,\n    createCustomer,\n    createCustomerReset,\n    createCustomerState\n  } = props;\n  const isMobile = useMediaQuery({\n    query: '(max-width: 800px)'\n  });\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  /* callback */\n\n  useEffect(() => {\n    setCustomerData({\n      customer: getCustomer()\n    });\n  }, []);\n  useEffect(() => {\n    if (loginState.apiState === \"error\") {\n      message.error(loginState.message);\n      loginReset();\n    }\n\n    if (loginState.apiState === \"success\") {\n      message.success(loginState.message);\n      setToken(loginState.token);\n      props.onClose();\n      setUserLoggedIn();\n      setCustomer(loginState.customer);\n      setCustomerData({\n        customer: loginState.customer\n      });\n      loginReset();\n    }\n  }, [loginState]);\n  useEffect(() => {\n    if (createCustomerState.apiState === \"error\") {\n      message.error(createCustomerState.message); // message.error(\"Something went wrong. Please try later\");\n    }\n\n    if (createCustomerState.apiState === \"success\") {\n      props.onClose(true);\n      console.log(createCustomerState.customer.signup_method);\n\n      if (createCustomerState.customer.signup_method === \"website\") {\n        hideSignupModal();\n      }\n\n      message.success(createCustomerState.message);\n      setToken(createCustomerState.token);\n      setUserLoggedIn();\n      setCustomer(createCustomerState.customer);\n      setCustomerData({\n        customer: createCustomerState.customer\n      });\n      createCustomerReset();\n    }\n  }, [createCustomerState]);\n  /* function */\n\n  const handleInputChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    login({\n      cart_id: getCartId(),\n      ...formData\n    });\n  };\n\n  const handleLogout = () => {\n    message.success(\"You are logged out successfully.\");\n    removeToken();\n    props.onClose();\n    setUserLoggedOut();\n    removeCustomer();\n    setCustomerData({\n      customer: null\n    });\n  };\n\n  const responseGoogle = response => {\n    if (response.type === \"error\") {\n      return false;\n    }\n\n    console.log(\"response:\", response);\n    createCustomer({\n      signup_method: \"google\",\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      id_token: response.tokenObj.id_token\n    });\n  };\n\n  if (generalState.isUserLoginIn === true) return /*#__PURE__*/React.createElement(AccDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 52\n    }\n  });\n  return /*#__PURE__*/React.createElement(AccDrawer, {\n    title: \"ACCOUNT\",\n    placement: \"right\",\n    visible: props.accountVisible,\n    onClose: () => props.onClose(),\n    width: isMobile ? \"90%\" : 450,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"0px 40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    onFinish: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"Email\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }, {\n      type: 'email',\n      message: 'Email is not valid'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      borderRadius: '8px'\n    },\n    name: \"email\",\n    placeholder: \"Email\",\n    size: \"large\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Password\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    style: {\n      borderRadius: '8px'\n    },\n    name: \"password\",\n    placeholder: \"Password\",\n    size: \"large\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(BlackBtn, {\n    style: {\n      borderRadius: '8px'\n    },\n    type: \"primary\",\n    block: true,\n    size: \"large\",\n    htmlType: \"submit\",\n    loading: loginState.apiState === \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"LOGIN\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      paddingTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot-password\",\n    onClick: () => {\n      props.onClose(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, \"Forgot Password?\"))), /*#__PURE__*/React.createElement(Divider, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"15117413891-dgacpafu1fiicn3tqkr9jqv6uch2q3sp.apps.googleusercontent.com\",\n    buttonText: \"Login\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: \"single_host_origin\",\n    style: {\n      borderRadius: '8px'\n    },\n    render: renderProps => /*#__PURE__*/React.createElement(GoogleButton, {\n      style: {\n        width: \"100%\",\n        borderRadius: '10px'\n      },\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, \"Sign in with Google\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(BlackBtn, {\n    style: {\n      borderRadius: '8px'\n    },\n    type: \"primary\",\n    block: true,\n    size: \"large\",\n    onClick: () => {\n      props.onClose(false);\n      showSignupModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"Create an Account\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Thanks to your Piky account, you will be able to:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"Access your shopping cart\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, \"Save your billing and delivery information to order faster\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, \"Manage your address book\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, \"Access all your orders and download the related invoices\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, \"Manage your newsletter subscription\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, \"Update your personal data\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginTop: 32,\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      alignSelf: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"HERE TO HELP\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Have a question? You may find an answer in our FAQs.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"But you can also contact us:\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginTop: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, \"Customer Service\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Call 0000-000-000\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \"Monday through Friday: 9am - 6pm ET\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Saturday: 10am - 6pm ET\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, \"Send us an email\"))));\n};\n\nconst mapStateToProps = state => ({\n  generalState: state.general,\n  loginState: state.login,\n  createCustomerState: state.createCustomer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleSignupModal: () => dispatch(toggleSignupModal()),\n  showSignupModal: () => dispatch(showSignupModal()),\n  hideSignupModal: () => dispatch(hideSignupModal()),\n  setCustomerData: params => dispatch(setCustomerData(params)),\n  login: params => dispatch(login(params)),\n  loginReset: () => dispatch(loginReset()),\n  createCustomer: params => dispatch(createCustomer(params)),\n  createCustomerReset: () => dispatch(createCustomerReset()),\n  setUserLoggedIn: () => dispatch(setUserLoggedIn()),\n  setUserLoggedOut: () => dispatch(setUserLoggedOut())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDrawer);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala/src/component/AccountDrawer/AccountDrawer.js"],"names":["React","useEffect","useState","useMediaQuery","connect","Form","Input","Divider","message","Link","useLocation","HeartOutlined","UserOutlined","UnorderedListOutlined","LogoutOutlined","GoogleOutlined","AccDrawer","AccountLi","AccountUl","BlackBtn","RedBtn","GoogleLogin","GoogleButton","toggleSignupModal","setCustomerData","setUserLoggedIn","setUserLoggedOut","hideSignupModal","showSignupModal","login","loginReset","createCustomer","createCustomerReset","getCustomer","setToken","setCustomer","removeCustomer","removeToken","getCartId","AccountDrawer","props","location","generalState","loginState","createCustomerState","isMobile","query","formData","setFormData","email","password","customer","apiState","error","success","token","onClose","console","log","signup_method","handleInputChange","e","target","name","value","handleSubmit","cart_id","handleLogout","responseGoogle","response","type","profileObj","id_token","tokenObj","isUserLoginIn","accountVisible","padding","required","borderRadius","display","justifyContent","paddingTop","renderProps","width","onClick","disabled","marginTop","fontSize","flexDirection","alignSelf","mapStateToProps","state","general","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMediaQuery } from 'react-responsive'\nimport { connect } from \"react-redux\"\nimport { Form, Input, Divider, message } from \"antd\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport {\n    HeartOutlined, UserOutlined,\n    UnorderedListOutlined, LogoutOutlined, GoogleOutlined\n} from \"@ant-design/icons\"\n/* custom component */\nimport { AccDrawer, AccountLi, AccountUl } from \"./AccountDrawerStyle\"\nimport { BlackBtn, RedBtn } from \"../../component/Xcomponent\"\nimport GoogleLogin from \"react-google-login\";\nimport GoogleButton from 'react-google-button'\n/* actions */\nimport { toggleSignupModal, setCustomerData, setUserLoggedIn, setUserLoggedOut, hideSignupModal, showSignupModal } from \"../../action/generalAction\"\nimport { login, loginReset } from \"../../action/loginAction\"\nimport { createCustomer, createCustomerReset } from \"../../action/createCustomerAction\"\n/* other */\nimport { getCustomer, setToken, setCustomer, removeCustomer, removeToken, getCartId } from '../../utils'\n\nconst AccountDrawer = props => {\n    /* variable and state */\n    const location = useLocation();\n    const {\n        toggleSignupModal, showSignupModal, hideSignupModal, setCustomerData, setUserLoggedIn, setUserLoggedOut, generalState,\n        login, loginReset, loginState,\n        createCustomer, createCustomerReset, createCustomerState,\n    } = props\n    const isMobile = useMediaQuery({ query: '(max-width: 800px)' })\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    /* callback */\n    useEffect(() => {\n        setCustomerData({\n            customer: getCustomer()\n        })\n    }, [])\n\n    useEffect(() => {\n        if (loginState.apiState === \"error\") {\n            message.error(loginState.message);\n            loginReset()\n        }\n        if (loginState.apiState === \"success\") {\n            message.success(loginState.message);\n            setToken(loginState.token)\n            props.onClose()\n            setUserLoggedIn()\n            setCustomer(loginState.customer)\n            setCustomerData({\n                customer: loginState.customer\n            })\n            loginReset()\n        }\n    }, [loginState])\n\n    useEffect(() => {\n        if (createCustomerState.apiState === \"error\") {\n            message.error(createCustomerState.message);\n            // message.error(\"Something went wrong. Please try later\");\n        }\n        if (createCustomerState.apiState === \"success\") {\n            props.onClose(true)\n            console.log(createCustomerState.customer.signup_method)\n            if (createCustomerState.customer.signup_method === \"website\") {\n                hideSignupModal()\n            }\n            message.success(createCustomerState.message);\n            setToken(createCustomerState.token)\n            setUserLoggedIn()\n            setCustomer(createCustomerState.customer)\n            setCustomerData({\n                customer: createCustomerState.customer\n            })\n            createCustomerReset()\n\n        }\n    }, [createCustomerState])\n\n    /* function */\n    const handleInputChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = () => {\n        login({\n            cart_id: getCartId(),\n            ...formData\n        })\n    }\n\n    const handleLogout = () => {\n        message.success(\"You are logged out successfully.\");\n        removeToken()\n        props.onClose()\n        setUserLoggedOut()\n        removeCustomer()\n        setCustomerData({\n            customer: null\n        })\n    }\n    const responseGoogle = (response) => {\n        if (response.type === \"error\") {\n            return false;\n        }\n        console.log(\"response:\", response)\n        createCustomer({\n            signup_method: \"google\",\n            name: response.profileObj.name,\n            email: response.profileObj.email,\n            id_token: response.tokenObj.id_token,\n        });\n    };\n\n    if(generalState.isUserLoginIn === true) return <AccDrawer></AccDrawer>\n\n    return (\n        <AccDrawer title=\"ACCOUNT\" placement=\"right\" visible={props.accountVisible} onClose={() => props.onClose()} width={isMobile ? \"90%\" : 450}>\n                <div style={{ padding: \"0px 40px\" }} >\n                    <Form layout=\"vertical\" onFinish={handleSubmit}>\n                        <Form.Item name=\"email\" label=\"Email\" rules={[ { required: true, message: 'Required' },{ type: 'email', message: 'Email is not valid' }]}>\n                            <Input  style={{ borderRadius:'8px' }} name=\"email\" placeholder=\"Email\" size='large' onChange={handleInputChange} />\n                        </Form.Item>\n                        <Form.Item  name=\"password\" label=\"Password\" rules={[{ required: true, message: 'Required' }]}>\n                            <Input.Password style={{ borderRadius:'8px' }}  name=\"password\" placeholder=\"Password\" size='large'  onChange={handleInputChange}/>\n                        </Form.Item>\n\n                        <BlackBtn style={{ borderRadius:'8px' }} type=\"primary\" block size=\"large\" htmlType=\"submit\" loading={loginState.apiState === \"loading\"}>LOGIN</BlackBtn>\n                        <div style={{ display: \"flex\", justifyContent: \"center\",paddingTop:'10px' }} >\n                            <Link to=\"/forgot-password\" onClick={() => { props.onClose(false) }} >Forgot Password?</Link>\n                        </div>\n                    </Form>\n\n                    <Divider plain>OR</Divider>\n\n                    <GoogleLogin\n                        clientId=\"15117413891-dgacpafu1fiicn3tqkr9jqv6uch2q3sp.apps.googleusercontent.com\"\n                        buttonText=\"Login\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={\"single_host_origin\"}\n                        style={{ borderRadius:'8px' }}\n                        render={renderProps => (\n                            <GoogleButton style={{ width: \"100%\",borderRadius:'10px' }} onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign in with Google</GoogleButton>\n                        )}\n                    />\n                    <Divider plain>OR</Divider>\n\n                    <BlackBtn style={{ borderRadius:'8px' }} type=\"primary\" block size=\"large\" onClick={() => { props.onClose(false); showSignupModal() }}>Create an Account</BlackBtn>\n                    <div style={{ marginTop: 8 }} >\n                        <p style={{ fontSize: 12 }} >Thanks to your Piky account, you will be able to:</p>\n                        <ul style={{ fontSize: 12 }} >\n                            <li>Access your shopping cart</li>\n                            <li>Save your billing and delivery information to order faster</li>\n                            <li>Manage your address book</li>\n                            <li>Access all your orders and download the related invoices</li>\n                            <li>Manage your newsletter subscription</li>\n                            <li>Update your personal data</li>\n                        </ul>\n                    </div>\n\n                    <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: 32, fontSize: 12 }} >\n                        <h3 style={{ alignSelf: \"center\" }} >HERE TO HELP</h3>\n                        <span>Have a question? You may find an answer in our FAQs.</span>\n                        <span>But you can also contact us:</span>\n                        <h3 style={{ marginTop: 12 }} >Customer Service</h3>\n                        <span>Call 0000-000-000</span>\n                        <span>Monday through Friday: 9am - 6pm ET</span>\n                        <span>Saturday: 10am - 6pm ET</span>\n                        <span>Send us an email</span>\n                    </div>\n                </div>\n        </AccDrawer>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    generalState: state.general,\n    loginState: state.login,\n    createCustomerState: state.createCustomer,\n})\nconst mapDispatchToProps = (dispatch) => ({\n    toggleSignupModal: () => dispatch(toggleSignupModal()),\n    showSignupModal: () => dispatch(showSignupModal()),\n    hideSignupModal: () => dispatch(hideSignupModal()),\n    setCustomerData: (params) => dispatch(setCustomerData(params)),\n    login: (params) => dispatch(login(params)),\n    loginReset: () => dispatch(loginReset()),\n    createCustomer: (params) => dispatch(createCustomer(params)),\n    createCustomerReset: () => dispatch(createCustomerReset()),\n    setUserLoggedIn: () => dispatch(setUserLoggedIn()),\n    setUserLoggedOut: () => dispatch(setUserLoggedOut()),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDrawer)"]},"metadata":{},"sourceType":"module"}