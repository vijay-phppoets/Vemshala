{"ast":null,"code":"import _slicedToArray from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{CloseOutlined}from\"@ant-design/icons\";import{connect}from\"react-redux\";// custom component\nimport{Container,CloseBtnContainer}from\"./TopBarStyle\";import{setOfferStrip,getOfferStrip}from\"../../utils\";// action\nimport{getOffer as _getOffer}from\"../../action/getOfferAction\";var TopBar=function TopBar(props){var getOffer=props.getOffer,getOfferState=props.getOfferState;var _useState=useState(\"yes\"),_useState2=_slicedToArray(_useState,2),topBarView=_useState2[0],setTopBarView=_useState2[1];// Callback\nuseEffect(function(){getOffer();},[]);var handleClose=function handleClose(){setOfferStrip(\"no\");setTopBarView(\"no\");};var strip=getOfferStrip();strip=!strip?\"yes\":strip;setOfferStrip(strip);return/*#__PURE__*/React.createElement(\"div\",null,getOfferStrip()===\"yes\"?/*#__PURE__*/React.createElement(Container,null,getOfferState.message,/*#__PURE__*/React.createElement(CloseBtnContainer,null,/*#__PURE__*/React.createElement(\"a\",{href:\"#\",onClick:function onClick(){return handleClose();},className:\"close-button\"}))):\"\");};var mapStateToProps=function mapStateToProps(state){return{getOfferState:state.getOffer};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getOffer:function getOffer(params){return dispatch(_getOffer(params));}};};export default connect(mapStateToProps,mapDispatchToProps)(TopBar);","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/component/TopBar/TopBar.js"],"names":["React","useEffect","useState","CloseOutlined","connect","Container","CloseBtnContainer","setOfferStrip","getOfferStrip","getOffer","TopBar","props","getOfferState","topBarView","setTopBarView","handleClose","strip","message","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,KAA8B,mBAA9B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AACA,OAASC,SAAT,CAAoBC,iBAApB,KAA6C,eAA7C,CACA,OAASC,aAAT,CAAwBC,aAAxB,KAA6C,aAA7C,CACA;AACA,OAASC,QAAQ,GAARA,CAAAA,SAAT,KAAyB,6BAAzB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,CAAI,IAEhBF,CAAAA,QAFgB,CAGhBE,KAHgB,CAEhBF,QAFgB,CAENG,aAFM,CAGhBD,KAHgB,CAENC,aAFM,eAIgBV,QAAQ,CAAC,KAAD,CAJxB,wCAIbW,UAJa,eAIDC,aAJC,eAMpB;AACAb,SAAS,CAAC,UAAM,CACZQ,QAAQ,GACX,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBR,aAAa,CAAC,IAAD,CAAb,CACAO,aAAa,CAAC,IAAD,CAAb,CACH,CAHD,CAIA,GAAIE,CAAAA,KAAK,CAAGR,aAAa,EAAzB,CACAQ,KAAK,CAAG,CAACA,KAAD,CAAS,KAAT,CAAiBA,KAAzB,CACAT,aAAa,CAACS,KAAD,CAAb,CACA,mBACI,+BACKR,aAAa,KAAO,KAApB,cACG,oBAAC,SAAD,MACKI,aAAa,CAACK,OADnB,cAEI,oBAAC,iBAAD,mBACI,yBAAG,IAAI,CAAC,GAAR,CAAY,OAAO,CAAE,yBAAMF,CAAAA,WAAW,EAAjB,EAArB,CAA0C,SAAS,CAAC,cAApD,EADJ,CAFJ,CADH,CAOK,EARV,CADJ,CAaH,CA/BD,CAgCA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCP,aAAa,CAAEO,KAAK,CAACV,QADW,CAAZ,EAAxB,CAGA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACtCZ,QAAQ,CAAE,kBAACa,MAAD,QAAYD,CAAAA,QAAQ,CAACZ,SAAQ,CAACa,MAAD,CAAT,CAApB,EAD4B,CAAf,EAA3B,CAGA,cAAelB,CAAAA,OAAO,CAACc,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { connect } from \"react-redux\"\n// custom component\nimport { Container, CloseBtnContainer } from \"./TopBarStyle\"\nimport { setOfferStrip, getOfferStrip } from \"../../utils\"\n// action\nimport { getOffer } from \"../../action/getOfferAction\"\nconst TopBar = props => {\n    const {\n        getOffer, getOfferState,\n    } = props\n    const [topBarView, setTopBarView] = useState(\"yes\")\n\n    // Callback\n    useEffect(() => {\n        getOffer()\n    }, [])\n\n    const handleClose = () => {\n        setOfferStrip(\"no\")\n        setTopBarView(\"no\")\n    }\n    let strip = getOfferStrip();\n    strip = !strip ? \"yes\" : strip;\n    setOfferStrip(strip);\n    return (\n        <div>\n            {getOfferStrip() === \"yes\" ?\n                <Container>\n                    {getOfferState.message}\n                    <CloseBtnContainer>\n                        <a href=\"#\" onClick={() => handleClose()} className=\"close-button\"></a>\n                    </CloseBtnContainer>\n                </Container>\n                : \"\"\n            }\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    getOfferState: state.getOffer,\n})\nconst mapDispatchToProps = (dispatch) => ({\n    getOffer: (params) => dispatch(getOffer(params)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar)"]},"metadata":{},"sourceType":"module"}