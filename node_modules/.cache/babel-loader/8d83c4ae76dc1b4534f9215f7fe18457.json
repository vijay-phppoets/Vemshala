{"ast":null,"code":"import _regeneratorRuntime from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(updateCartSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(MySaga);import{call,put,takeLatest}from'redux-saga/effects';import{UPDATE_CART,updateCartSuccess,updateCartFail}from'../action/updateCartAction';import updateCartApi from'../api/updateCartApi';export function updateCartSaga(action){var response;return _regeneratorRuntime.wrap(function updateCartSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(function(){return updateCartApi(action.params);});case 3:response=_context.sent;_context.next=6;return put(updateCartSuccess(response,action));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(updateCartFail(_context.t0.response,action));case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}export default function MySaga(){return _regeneratorRuntime.wrap(function MySaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(UPDATE_CART,updateCartSaga);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/saga/updateCartSaga.js"],"names":["updateCartSaga","MySaga","call","put","takeLatest","UPDATE_CART","updateCartSuccess","updateCartFail","updateCartApi","action","params","response"],"mappings":"2MAUiBA,c,iDASQC,M,EAnBzB,OAASC,IAAT,CAAeC,GAAf,CAAoBC,UAApB,KAAsC,oBAAtC,CAEA,OACIC,WADJ,CAEIC,iBAFJ,CAGIC,cAHJ,KAIO,4BAJP,CAMA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,CAEA,MAAO,SAAUR,CAAAA,cAAV,CAAyBS,MAAzB,sKAEkB,MAAMP,CAAAA,IAAI,CAAC,iBAAMM,CAAAA,aAAa,CAACC,MAAM,CAACC,MAAR,CAAnB,EAAD,CAAV,CAFlB,OAEOC,QAFP,+BAGC,MAAMR,CAAAA,GAAG,CAACG,iBAAiB,CAACK,QAAD,CAAWF,MAAX,CAAlB,CAAT,CAHD,uGAKC,MAAMN,CAAAA,GAAG,CAACI,cAAc,CAAC,YAAEI,QAAH,CAAaF,MAAb,CAAf,CAAT,CALD,oEASP,cAAe,SAAUR,CAAAA,MAAV,sIACX,MAAMG,CAAAA,UAAU,CAACC,WAAD,CAAcL,cAAd,CAAhB,CADW","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n    UPDATE_CART,\n    updateCartSuccess,\n    updateCartFail\n} from '../action/updateCartAction'\n\nimport updateCartApi from '../api/updateCartApi'\n\nexport function* updateCartSaga(action) {\n    try {\n        const response = yield call(() => updateCartApi(action.params))\n        yield put(updateCartSuccess(response, action))\n    } catch (e) {\n        yield put(updateCartFail(e.response, action))\n    }\n}\n\nexport default function* MySaga() {\n    yield takeLatest(UPDATE_CART, updateCartSaga)\n}"]},"metadata":{},"sourceType":"module"}