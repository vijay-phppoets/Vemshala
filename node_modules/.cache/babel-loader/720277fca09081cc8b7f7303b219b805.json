{"ast":null,"code":"import moment from \"moment\";\nexport const getCartId = () => {\n  return localStorage.getItem('PikyCartId');\n};\nexport const setCartId = cart_id => {\n  return localStorage.setItem('PikyCartId', cart_id);\n};\nexport const removeCartId = () => {\n  return localStorage.removeItem('PikyCartId');\n};\nexport const getToken = () => {\n  return localStorage.getItem('PikyToken');\n};\nexport const removeToken = () => {\n  return localStorage.removeItem('PikyToken');\n};\nexport const setToken = token => {\n  return localStorage.setItem('PikyToken', token);\n};\nexport const getCustomer = () => {\n  return JSON.parse(localStorage.getItem('PikyCustomer'));\n};\nexport const removeCustomer = () => {\n  return localStorage.removeItem('PikyCustomer');\n};\nexport const setCustomer = customer => {\n  return localStorage.setItem('PikyCustomer', JSON.stringify(customer));\n};\nexport const pad = (number, digits = 2, emptyDigit = 0) => {\n  let length = 0;\n  let n = Math.abs(number);\n  let absoluteNumber = n;\n\n  do {\n    n /= 10;\n    length++;\n  } while (n >= 1);\n\n  const prefix = Array(Math.max(digits - length + 1, 0)).join(emptyDigit);\n  return number < 0 ? `#-${prefix}${absoluteNumber}` : '#' + prefix + number;\n};\nexport const dtFormat = d => {\n  return moment(d).format(\"DD-MMM-YYYY  HH:mm A\");\n};\nexport const inr = num => {\n  let n = parseFloat(num);\n  let negativeNumber = false;\n\n  if (n < 0) {\n    negativeNumber = true;\n    n = n * -1;\n  }\n\n  var x = n.toString();\n  var afterPoint = '';\n  if (x.indexOf('.') > 0) afterPoint = x.substring(x.indexOf('.'), x.length);\n  x = Math.floor(x);\n  x = x.toString();\n  var lastThree = x.substring(x.length - 3);\n  var otherNumbers = x.substring(0, x.length - 3);\n  if (otherNumbers != '') lastThree = ',' + lastThree;\n  var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint;\n\n  if (negativeNumber) {\n    return \"-\" + res;\n  } else {\n    return res;\n  }\n};\nexport const getCurrency = () => {\n  return localStorage.getItem('currencyType');\n};\nexport const setCurrency = currencyType => {\n  return localStorage.setItem('currencyType', currencyType);\n};\nexport const getOfferStrip = () => {\n  return localStorage.getItem('offerStrip');\n};\nexport const setOfferStrip = offerStrip => {\n  return localStorage.setItem('offerStrip', offerStrip);\n};","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/utils.js"],"names":["moment","getCartId","localStorage","getItem","setCartId","cart_id","setItem","removeCartId","removeItem","getToken","removeToken","setToken","token","getCustomer","JSON","parse","removeCustomer","setCustomer","customer","stringify","pad","number","digits","emptyDigit","length","n","Math","abs","absoluteNumber","prefix","Array","max","join","dtFormat","d","format","inr","num","parseFloat","negativeNumber","x","toString","afterPoint","indexOf","substring","floor","lastThree","otherNumbers","res","replace","getCurrency","setCurrency","currencyType","getOfferStrip","setOfferStrip","offerStrip"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAOC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa;AAClC,SAAOH,YAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCD,OAAnC,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,YAAY,GAAG,MAAM;AAC9B,SAAOL,YAAY,CAACM,UAAb,CAAwB,YAAxB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SAAOP,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMO,WAAW,GAAG,MAAM;AAC7B,SAAOR,YAAY,CAACM,UAAb,CAAwB,WAAxB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAOV,YAAY,CAACI,OAAb,CAAqB,WAArB,EAAkCM,KAAlC,CAAP;AACH,CAFM;AAGP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAOC,IAAI,CAACC,KAAL,CAAWb,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAP;AACH,CAFM;AAGP,OAAO,MAAMa,cAAc,GAAG,MAAM;AAChC,SAAOd,YAAY,CAACM,UAAb,CAAwB,cAAxB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMS,WAAW,GAAIC,QAAD,IAAc;AACrC,SAAOhB,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqCQ,IAAI,CAACK,SAAL,CAAeD,QAAf,CAArC,CAAP;AACH,CAFM;AAIP,OAAO,MAAME,GAAG,GAAG,CAACC,MAAD,EAASC,MAAM,GAAG,CAAlB,EAAqBC,UAAU,GAAG,CAAlC,KAAwC;AACvD,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASN,MAAT,CAAR;AACA,MAAIO,cAAc,GAAGH,CAArB;;AACA,KAAG;AACCA,IAAAA,CAAC,IAAI,EAAL;AACAD,IAAAA,MAAM;AACT,GAHD,QAGSC,CAAC,IAAI,CAHd;;AAIA,QAAMI,MAAM,GAAGC,KAAK,CAACJ,IAAI,CAACK,GAAL,CAAUT,MAAM,GAAGE,MAAV,GAAoB,CAA7B,EAAgC,CAAhC,CAAD,CAAL,CAA0CQ,IAA1C,CAA+CT,UAA/C,CAAf;AACA,SAAOF,MAAM,GAAG,CAAT,GAAc,KAAIQ,MAAO,GAAED,cAAe,EAA1C,GAA8C,MAAMC,MAAN,GAAeR,MAApE;AACH,CAVM;AAYP,OAAO,MAAMY,QAAQ,GAAIC,CAAD,IAAO;AAC3B,SAAOlC,MAAM,CAACkC,CAAD,CAAN,CAAUC,MAAV,CAAiB,sBAAjB,CAAP;AACH,CAFM;AAKP,OAAO,MAAMC,GAAG,GAAIC,GAAD,IAAS;AACxB,MAAIZ,CAAC,GAAGa,UAAU,CAACD,GAAD,CAAlB;AACA,MAAIE,cAAc,GAAG,KAArB;;AACA,MAAId,CAAC,GAAG,CAAR,EAAW;AACPc,IAAAA,cAAc,GAAG,IAAjB;AACAd,IAAAA,CAAC,GAAGA,CAAC,GAAG,CAAC,CAAT;AACH;;AACD,MAAIe,CAAC,GAAGf,CAAC,CAACgB,QAAF,EAAR;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIF,CAAC,CAACG,OAAF,CAAU,GAAV,IAAiB,CAArB,EACID,UAAU,GAAGF,CAAC,CAACI,SAAF,CAAYJ,CAAC,CAACG,OAAF,CAAU,GAAV,CAAZ,EAA4BH,CAAC,CAAChB,MAA9B,CAAb;AACJgB,EAAAA,CAAC,GAAGd,IAAI,CAACmB,KAAL,CAAWL,CAAX,CAAJ;AACAA,EAAAA,CAAC,GAAGA,CAAC,CAACC,QAAF,EAAJ;AACA,MAAIK,SAAS,GAAGN,CAAC,CAACI,SAAF,CAAYJ,CAAC,CAAChB,MAAF,GAAW,CAAvB,CAAhB;AACA,MAAIuB,YAAY,GAAGP,CAAC,CAACI,SAAF,CAAY,CAAZ,EAAeJ,CAAC,CAAChB,MAAF,GAAW,CAA1B,CAAnB;AACA,MAAIuB,YAAY,IAAI,EAApB,EACID,SAAS,GAAG,MAAMA,SAAlB;AACJ,MAAIE,GAAG,GAAGD,YAAY,CAACE,OAAb,CAAqB,uBAArB,EAA8C,GAA9C,IAAqDH,SAArD,GAAiEJ,UAA3E;;AAEA,MAAIH,cAAJ,EAAoB;AAChB,WAAO,MAAMS,GAAb;AACH,GAFD,MAEO;AACH,WAAOA,GAAP;AACH;AACJ,CAxBM;AA0BP,OAAO,MAAME,WAAW,GAAG,MAAM;AAC7B,SAAOhD,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMgD,WAAW,GAAIC,YAAD,IAAkB;AACzC,SAAOlD,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAqC8C,YAArC,CAAP;AACH,CAFM;AAKP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAOnD,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMmD,aAAa,GAAIC,UAAD,IAAgB;AACzC,SAAOrD,YAAY,CAACI,OAAb,CAAqB,YAArB,EAAmCiD,UAAnC,CAAP;AACH,CAFM","sourcesContent":["import moment from \"moment\"\n\nexport const getCartId = () => {\n    return localStorage.getItem('PikyCartId')\n}\n\nexport const setCartId = (cart_id) => {\n    return localStorage.setItem('PikyCartId', cart_id)\n}\n\nexport const removeCartId = () => {\n    return localStorage.removeItem('PikyCartId')\n}\n\nexport const getToken = () => {\n    return localStorage.getItem('PikyToken')\n}\n\nexport const removeToken = () => {\n    return localStorage.removeItem('PikyToken')\n}\n\nexport const setToken = (token) => {\n    return localStorage.setItem('PikyToken', token)\n}\nexport const getCustomer = () => {\n    return JSON.parse(localStorage.getItem('PikyCustomer'))\n}\nexport const removeCustomer = () => {\n    return localStorage.removeItem('PikyCustomer')\n}\n\nexport const setCustomer = (customer) => {\n    return localStorage.setItem('PikyCustomer', JSON.stringify(customer))\n}\n\nexport const pad = (number, digits = 2, emptyDigit = 0) => {\n    let length = 0;\n    let n = Math.abs(number);\n    let absoluteNumber = n;\n    do {\n        n /= 10;\n        length++;\n    } while (n >= 1);\n    const prefix = Array(Math.max((digits - length) + 1, 0)).join(emptyDigit);\n    return number < 0 ? `#-${prefix}${absoluteNumber}` : '#' + prefix + number;\n}\n\nexport const dtFormat = (d) => {\n    return moment(d).format(\"DD-MMM-YYYY  HH:mm A\")\n}\n\n\nexport const inr = (num) => {\n    let n = parseFloat(num)\n    let negativeNumber = false\n    if (n < 0) {\n        negativeNumber = true\n        n = n * -1\n    }\n    var x = n.toString();\n    var afterPoint = '';\n    if (x.indexOf('.') > 0)\n        afterPoint = x.substring(x.indexOf('.'), x.length);\n    x = Math.floor(x);\n    x = x.toString();\n    var lastThree = x.substring(x.length - 3);\n    var otherNumbers = x.substring(0, x.length - 3);\n    if (otherNumbers != '')\n        lastThree = ',' + lastThree;\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint\n\n    if (negativeNumber) {\n        return \"-\" + res\n    } else {\n        return res\n    }\n}\n\nexport const getCurrency = () => {\n    return localStorage.getItem('currencyType')\n}\n\nexport const setCurrency = (currencyType) => {\n    return localStorage.setItem('currencyType', currencyType)\n}\n\n\nexport const getOfferStrip = () => {\n    return localStorage.getItem('offerStrip')\n}\n\nexport const setOfferStrip = (offerStrip) => {\n    return localStorage.setItem('offerStrip', offerStrip)\n}"]},"metadata":{},"sourceType":"module"}