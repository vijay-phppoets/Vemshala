{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { DELETE_CUSTOMER_ADDRESS, deleteCustomerAddressSuccess, deleteCustomerAddressFail } from '../action/deleteCustomerAddressAction';\nimport deleteCustomerAddressApi from '../api/deleteCustomerAddressApi';\nexport function* deleteCustomerAddressSaga(action) {\n  try {\n    const response = yield call(() => deleteCustomerAddressApi(action.params));\n    yield put(deleteCustomerAddressSuccess(response, action));\n  } catch (e) {\n    yield put(deleteCustomerAddressFail(e.response, action));\n  }\n}\nexport default function* MySaga() {\n  yield takeLatest(DELETE_CUSTOMER_ADDRESS, deleteCustomerAddressSaga);\n}","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/saga/deleteCustomerAddressSaga.js"],"names":["call","put","takeLatest","DELETE_CUSTOMER_ADDRESS","deleteCustomerAddressSuccess","deleteCustomerAddressFail","deleteCustomerAddressApi","deleteCustomerAddressSaga","action","response","params","e","MySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,SACIC,uBADJ,EAEIC,4BAFJ,EAGIC,yBAHJ,QAIO,uCAJP;AAMA,OAAOC,wBAAP,MAAqC,iCAArC;AAEA,OAAO,UAAUC,yBAAV,CAAoCC,MAApC,EAA4C;AAC/C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAAC,MAAMM,wBAAwB,CAACE,MAAM,CAACE,MAAR,CAA/B,CAA3B;AACA,UAAMT,GAAG,CAACG,4BAA4B,CAACK,QAAD,EAAWD,MAAX,CAA7B,CAAT;AACH,GAHD,CAGE,OAAOG,CAAP,EAAU;AACR,UAAMV,GAAG,CAACI,yBAAyB,CAACM,CAAC,CAACF,QAAH,EAAaD,MAAb,CAA1B,CAAT;AACH;AACJ;AAED,eAAe,UAAUI,MAAV,GAAmB;AAC9B,QAAMV,UAAU,CAACC,uBAAD,EAA0BI,yBAA1B,CAAhB;AACH","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n    DELETE_CUSTOMER_ADDRESS,\n    deleteCustomerAddressSuccess,\n    deleteCustomerAddressFail\n} from '../action/deleteCustomerAddressAction'\n\nimport deleteCustomerAddressApi from '../api/deleteCustomerAddressApi'\n\nexport function* deleteCustomerAddressSaga(action) {\n    try {\n        const response = yield call(() => deleteCustomerAddressApi(action.params))\n        yield put(deleteCustomerAddressSuccess(response, action))\n    } catch (e) {\n        yield put(deleteCustomerAddressFail(e.response, action))\n    }\n}\n\nexport default function* MySaga() {\n    yield takeLatest(DELETE_CUSTOMER_ADDRESS, deleteCustomerAddressSaga)\n}"]},"metadata":{},"sourceType":"module"}