{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducer'; // sagas\n\nimport getCategoryDetailsSaga from './saga/getCategoryDetailsSaga';\nimport getProductListSaga from './saga/getProductListSaga';\nimport getCategoryTreeSaga from './saga/getCategoryTreeSaga';\nimport getHomePageDataSaga from './saga/getHomePageDataSaga';\nimport getAttributeListSaga from './saga/getAttributeListSaga';\nimport getProductDetailSaga from './saga/getProductDetailSaga';\nimport updateCartSaga from './saga/updateCartSaga';\nimport getCartCountSaga from './saga/getCartCountSaga';\nimport getCartSaga from './saga/getCartSaga';\nimport createCustomerSaga from './saga/createCustomerSaga';\nimport loginSaga from './saga/loginSaga';\nimport saveCartAddressSaga from './saga/saveCartAddressSaga';\nimport getCountryListSaga from './saga/getCountryListSaga';\nimport getStateListSaga from './saga/getStateListSaga';\nimport placeCodOrderSaga from './saga/placeCodOrderSaga';\nimport getCustomerDetailSaga from './saga/getCustomerDetailSaga';\nimport getOrderListSaga from './saga/getOrderListSaga';\nimport getOrderDetailSaga from './saga/getOrderDetailSaga';\nimport saveWishlistSaga from './saga/saveWishlistSaga';\nimport getWishlistSaga from './saga/getWishlistSaga';\nimport wishlistRemoveSaga from './saga/wishlistRemoveSaga';\nimport checkCouponSaga from './saga/checkCouponSaga';\nimport saveContactSaga from './saga/saveContactSaga';\nimport removeCouponSaga from './saga/removeCouponSaga';\nimport getOfferSaga from './saga/getOfferSaga';\nimport sendOtpSaga from './saga/sendOtpSaga';\nimport resetPasswordSaga from './saga/resetPasswordSaga';\nimport getInvoiceSaga from './saga/getInvoiceSaga';\nimport getExclusiveProductsSaga from './saga/getExclusiveProductsSaga';\nimport getCustomerAddressSaga from './saga/getCustomerAddressSaga';\nimport addCustomerAddressSaga from './saga/addCustomerAddressSaga';\nimport deleteCustomerAddressSaga from './saga/deleteCustomerAddressSaga'; // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware(); // mount it on the Store\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware))); // then run the saga\n\nsagaMiddleware.run(getCategoryDetailsSaga);\nsagaMiddleware.run(getProductListSaga);\nsagaMiddleware.run(getCategoryTreeSaga);\nsagaMiddleware.run(getHomePageDataSaga);\nsagaMiddleware.run(getAttributeListSaga);\nsagaMiddleware.run(getProductDetailSaga);\nsagaMiddleware.run(updateCartSaga);\nsagaMiddleware.run(getCartCountSaga);\nsagaMiddleware.run(getCartSaga);\nsagaMiddleware.run(createCustomerSaga);\nsagaMiddleware.run(loginSaga);\nsagaMiddleware.run(saveCartAddressSaga);\nsagaMiddleware.run(getCountryListSaga);\nsagaMiddleware.run(getStateListSaga);\nsagaMiddleware.run(placeCodOrderSaga);\nsagaMiddleware.run(getCustomerDetailSaga);\nsagaMiddleware.run(getOrderListSaga);\nsagaMiddleware.run(getOrderDetailSaga);\nsagaMiddleware.run(saveWishlistSaga);\nsagaMiddleware.run(getWishlistSaga);\nsagaMiddleware.run(wishlistRemoveSaga);\nsagaMiddleware.run(checkCouponSaga);\nsagaMiddleware.run(saveContactSaga);\nsagaMiddleware.run(removeCouponSaga);\nsagaMiddleware.run(getOfferSaga);\nsagaMiddleware.run(sendOtpSaga);\nsagaMiddleware.run(resetPasswordSaga);\nsagaMiddleware.run(getInvoiceSaga);\nsagaMiddleware.run(getExclusiveProductsSaga);\nsagaMiddleware.run(getCustomerAddressSaga);\nsagaMiddleware.run(addCustomerAddressSaga);\nsagaMiddleware.run(deleteCustomerAddressSaga); // render the application\n\nexport default store;","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","reducer","getCategoryDetailsSaga","getProductListSaga","getCategoryTreeSaga","getHomePageDataSaga","getAttributeListSaga","getProductDetailSaga","updateCartSaga","getCartCountSaga","getCartSaga","createCustomerSaga","loginSaga","saveCartAddressSaga","getCountryListSaga","getStateListSaga","placeCodOrderSaga","getCustomerDetailSaga","getOrderListSaga","getOrderDetailSaga","saveWishlistSaga","getWishlistSaga","wishlistRemoveSaga","checkCouponSaga","saveContactSaga","removeCouponSaga","getOfferSaga","sendOtpSaga","resetPasswordSaga","getInvoiceSaga","getExclusiveProductsSaga","getCustomerAddressSaga","addCustomerAddressSaga","deleteCustomerAddressSaga","sagaMiddleware","store","run"],"mappings":"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","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\n\nimport reducer from './reducer'\n\n// sagas\nimport getCategoryDetailsSaga from './saga/getCategoryDetailsSaga'\nimport getProductListSaga from './saga/getProductListSaga'\nimport getCategoryTreeSaga from './saga/getCategoryTreeSaga'\nimport getHomePageDataSaga from './saga/getHomePageDataSaga'\nimport getAttributeListSaga from './saga/getAttributeListSaga'\nimport getProductDetailSaga from './saga/getProductDetailSaga'\nimport updateCartSaga from './saga/updateCartSaga'\nimport getCartCountSaga from './saga/getCartCountSaga'\nimport getCartSaga from './saga/getCartSaga'\nimport createCustomerSaga from './saga/createCustomerSaga'\nimport loginSaga from './saga/loginSaga'\nimport saveCartAddressSaga from './saga/saveCartAddressSaga'\nimport getCountryListSaga from './saga/getCountryListSaga'\nimport getStateListSaga from './saga/getStateListSaga'\nimport placeCodOrderSaga from './saga/placeCodOrderSaga'\nimport getCustomerDetailSaga from './saga/getCustomerDetailSaga'\nimport getOrderListSaga from './saga/getOrderListSaga'\nimport getOrderDetailSaga from './saga/getOrderDetailSaga'\nimport saveWishlistSaga from './saga/saveWishlistSaga'\nimport getWishlistSaga from './saga/getWishlistSaga'\nimport wishlistRemoveSaga from './saga/wishlistRemoveSaga'\nimport checkCouponSaga from './saga/checkCouponSaga'\nimport saveContactSaga from './saga/saveContactSaga'\nimport removeCouponSaga from './saga/removeCouponSaga'\nimport getOfferSaga from './saga/getOfferSaga'\nimport sendOtpSaga from './saga/sendOtpSaga'\nimport resetPasswordSaga from './saga/resetPasswordSaga'\nimport getInvoiceSaga from './saga/getInvoiceSaga'\nimport getExclusiveProductsSaga from './saga/getExclusiveProductsSaga'\nimport getCustomerAddressSaga from './saga/getCustomerAddressSaga'\nimport addCustomerAddressSaga from './saga/addCustomerAddressSaga'\nimport deleteCustomerAddressSaga from './saga/deleteCustomerAddressSaga'\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n// mount it on the Store\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(sagaMiddleware)\n    )\n)\n\n// then run the saga\nsagaMiddleware.run(getCategoryDetailsSaga)\nsagaMiddleware.run(getProductListSaga)\nsagaMiddleware.run(getCategoryTreeSaga)\nsagaMiddleware.run(getHomePageDataSaga)\nsagaMiddleware.run(getAttributeListSaga)\nsagaMiddleware.run(getProductDetailSaga)\nsagaMiddleware.run(updateCartSaga)\nsagaMiddleware.run(getCartCountSaga)\nsagaMiddleware.run(getCartSaga)\nsagaMiddleware.run(createCustomerSaga)\nsagaMiddleware.run(loginSaga)\nsagaMiddleware.run(saveCartAddressSaga)\nsagaMiddleware.run(getCountryListSaga)\nsagaMiddleware.run(getStateListSaga)\nsagaMiddleware.run(placeCodOrderSaga)\nsagaMiddleware.run(getCustomerDetailSaga)\nsagaMiddleware.run(getOrderListSaga)\nsagaMiddleware.run(getOrderDetailSaga)\nsagaMiddleware.run(saveWishlistSaga)\nsagaMiddleware.run(getWishlistSaga)\nsagaMiddleware.run(wishlistRemoveSaga)\nsagaMiddleware.run(checkCouponSaga)\nsagaMiddleware.run(saveContactSaga)\nsagaMiddleware.run(removeCouponSaga)\nsagaMiddleware.run(getOfferSaga)\nsagaMiddleware.run(sendOtpSaga)\nsagaMiddleware.run(resetPasswordSaga)\nsagaMiddleware.run(getInvoiceSaga)\nsagaMiddleware.run(getExclusiveProductsSaga)\nsagaMiddleware.run(getCustomerAddressSaga)\nsagaMiddleware.run(addCustomerAddressSaga)\nsagaMiddleware.run(deleteCustomerAddressSaga)\n\n// render the application\n\nexport default store"]},"metadata":{},"sourceType":"module"}