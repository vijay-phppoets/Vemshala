{"ast":null,"code":"var _jsxFileName = \"/home/coder-kabir/Documents/GitHub/Vemshala/src/page/Profile/Profile.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col, message, Space, Form, Input, Modal, Select } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n/* CUSTOM COMPONENTS */\n\nimport { GlobleBox, Wrapper } from \"../../component/Xcomponent\";\nimport { Container, AddressCard, Label, NewAddressCard, AddressValue, Xbadge } from \"./ProfileStyle\";\nimport ProfileMenu from '../../component/ProfileMenu/ProfileMenu';\n/* ACTIONS */\n\nimport { getCustomerDetail, getCustomerDetailReset } from \"../../action/getCustomerDetailAction\";\nimport { getCustomerAddress, getCustomerAddressReset } from \"../../action/getCustomerAddressAction\";\nimport { addCustomerAddress, addCustomerAddressReset } from \"../../action/addCustomerAddressAction\";\nimport { deleteCustomerAddress, deleteCustomerAddressReset } from \"../../action/deleteCustomerAddressAction\";\nimport { getCountryList, getCountryListReset } from \"../../action/getCountryListAction\";\nimport { getStateList, getStateListReset } from \"../../action/getStateListAction\";\nconst Option = Select.Option;\n\nconst Profile = props => {\n  /* variable & state */\n  const {\n    getCustomerDetail,\n    getCustomerDetailReset,\n    getCustomerDetailState,\n    getCustomerAddress,\n    getCustomerAddresssReset,\n    getCustomerAddressState,\n    deleteCustomerAddress,\n    deleteCustomerAddressReset,\n    deleteCustomerAddressState,\n    addCustomerAddress,\n    addCustomerAddresssReset,\n    addCustomerAddressState,\n    getCountryList,\n    getCountryListReset,\n    getCountryListState,\n    getStateList,\n    getStateListReset,\n    getStateListState\n  } = props;\n  const [showModal, setShowModal] = useState({\n    visible: false,\n    loading: false\n  });\n  const [countryIndia, setCountryIndia] = useState({});\n  const [form] = Form.useForm();\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    company_name: \"\",\n    country: \"\",\n    country_id: \"\",\n    state: \"\",\n    city: \"\",\n    street: \"\",\n    landmark: \"\",\n    phone: \"\",\n    email: \"\"\n  });\n  /* callbacks */\n\n  useEffect(() => {\n    getCountryList({});\n    getCustomerDetail({});\n    getCustomerAddress({});\n  }, []);\n  useEffect(() => {\n    if (getCountryListState.apiState === \"success\") {\n      let country = _.find(getCountryListState.list, function (country) {\n        if (country.name === \"India\") {\n          return true;\n        }\n      });\n\n      setCountryIndia(country);\n    }\n  }, [getCountryListState]);\n  useEffect(() => {\n    getStateList({\n      country_id: formData.country_id\n    });\n  }, [formData.country_id]);\n  useEffect(() => {\n    if (addCustomerAddressState.apiState === \"success\") {\n      message.success(addCustomerAddressState.message);\n      addCustomerAddressReset();\n      setShowModal({ ...showModal,\n        ['visible']: false\n      });\n      setFormData({});\n      getCustomerAddress({});\n      addCustomerAddressReset({});\n      form.resetFields();\n    } else if (addCustomerAddressState.apiState === \"error\") {\n      message.error(\"Something went wrong. Please try later\");\n      addCustomerAddressReset({});\n    }\n  }, [addCustomerAddressState]);\n  useEffect(() => {\n    if (deleteCustomerAddressState.apiState === \"success\") {\n      message.success(deleteCustomerAddressState.message);\n      deleteCustomerAddressReset();\n      setShowModal({ ...showModal,\n        ['visible']: false\n      });\n      getCustomerAddress({});\n    } else if (deleteCustomerAddressState.apiState === \"error\") {\n      message.error(\"Something went wrong. Please try later\");\n    }\n  }, [deleteCustomerAddressState]); //Function\n\n  const handleOnChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSelectChange = (name, value, node) => {\n    if (name === 'country') {\n      setFormData({ ...formData,\n        [name]: node.children,\n        ['country_id']: value\n      });\n    } else {\n      setFormData({ ...formData,\n        [name]: value\n      });\n    }\n  };\n\n  const handleOnSubmit = () => {\n    form.validateFields().then(() => {\n      addCustomerAddress({\n        \"company_name\": formData['company_name'],\n        \"country\": formData['country'],\n        \"phone\": formData['phone'],\n        ...formData\n      });\n    });\n    form.resetFields();\n  };\n\n  const handleOnDelete = id => {\n    deleteCustomerAddress({\n      address_id: id\n    });\n  };\n\n  const handleCancel = () => {\n    setShowModal({ ...showModal,\n      ['visible']: false\n    });\n    form.resetFields();\n  };\n\n  return /*#__PURE__*/React.createElement(GlobleBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 6,\n    lg: 6,\n    xl: 6,\n    style: {\n      padding: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ProfileMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 18,\n    lg: 18,\n    xl: 18,\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, getCustomerDetailState.customer.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, getCustomerDetailState.customer.email), getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length > 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 132\n    }\n  }, \"Your Saved Addresses\") : /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 187\n    }\n  }, \"Please Add an Address\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: \"white\",\n      marginBottom: 40,\n      padding: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    size: \"large\",\n    style: {\n      display: \"flex\",\n      flexFlow: \"wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, getCustomerAddressState.customer_address.map(address => {\n    return /*#__PURE__*/React.createElement(AddressCard, {\n      active: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Xbadge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      style: {\n        color: '#bcbcbc'\n      },\n      onClick: () => handleOnDelete(address.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 49\n      }\n    }, address.first_name, \" \", address.last_name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 104\n      }\n    }), /*#__PURE__*/React.createElement(AddressValue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 49\n      }\n    }, address.street, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 97\n      }\n    }), address.landmark != \"\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AddressValue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 65\n      }\n    }, \"Landmark: \", address.landmark, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 123\n      }\n    })), /*#__PURE__*/React.createElement(AddressValue, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 49\n      }\n    }, address.city, \",\", address.state, \"  \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 150\n      }\n    }), /*#__PURE__*/React.createElement(AddressValue, {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 49\n      }\n    }, \"  \", address.country, \" , \", address.zip_code), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 158\n      }\n    }), /*#__PURE__*/React.createElement(AddressValue, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 49\n      }\n    }, address.phone), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 93\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(NewAddressCard, {\n    onClick: () => setShowModal({ ...showModal,\n      ['visible']: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 45\n    }\n  }, \"Add New Address\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 75\n    }\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    visible: showModal.visible,\n    title: \"Add Address\",\n    onCancel: handleCancel,\n    onOk: handleOnSubmit,\n    okText: \"Add Address\",\n    cancelText: \"Cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"first_name\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"first_name\",\n    placeholder: \"Enter First Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"last_name\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"last_name\",\n    placeholder: \"Enter Last Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"company_name\",\n    label: \"Company Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"company_name\",\n    placeholder: \"Enter Company Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"country\",\n    label: \"Country\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"country\",\n    placeholder: \"Select Country\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    onChange: (v, node) => handleSelectChange(\"country\", v, node),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    key: countryIndia.id,\n    value: countryIndia.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }, countryIndia.name), getCountryListState.list.map(country => /*#__PURE__*/React.createElement(Option, {\n    key: country.id,\n    value: country.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 49\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"state\",\n    label: \"State\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"state\",\n    placeholder: \"Select State\",\n    showSearch: true,\n    allowClear: true,\n    filterOption: (input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    onChange: v => handleSelectChange(\"state\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  }, getStateListState.list.map(state => /*#__PURE__*/React.createElement(Option, {\n    key: state.name,\n    value: state.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, state.name))))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"city\",\n    label: \"City\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"city\",\n    placeholder: \"Enter City\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"zip-code\",\n    label: \"PIN/ZIP Code\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"zip_code\",\n    placeholder: \"Enter PIN/ZIP CODE\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"street\",\n    label: \"Address\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"street\",\n    placeholder: \"Enter Plot/Flat no , Street Name\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 24,\n    xl: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"landmark\",\n    label: \"Landmark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"landmark\",\n    placeholder: \"Enter Apartment, suite, unit, etc.\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      marginBottom: \"6px\"\n    },\n    name: \"phone\",\n    label: \"Phone\",\n    maxLength: 15,\n    rules: [{\n      required: true,\n      message: 'Maximum 15 digits allowed',\n      pattern: /^[+\\da-zA-Z]{0,15}$/\n    }, {\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    placeholder: \"Enter Phone\",\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 41\n    }\n  }))))))))));\n};\n\nconst mapStateToProps = state => ({\n  getCustomerDetailState: state.getCustomerDetail,\n  getCountryListState: state.getCountryList,\n  getStateListState: state.getStateList,\n  getCustomerAddressState: state.getCustomerAddress,\n  addCustomerAddressState: state.addCustomerAddress,\n  deleteCustomerAddressState: state.deleteCustomerAddress\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCustomerDetail: params => dispatch(getCustomerDetail(params)),\n  getCustomerDetailReset: () => dispatch(getCustomerDetailReset()),\n  getCountryList: params => dispatch(getCountryList(params)),\n  getCountryListReset: () => dispatch(getCountryListReset()),\n  getStateList: params => dispatch(getStateList(params)),\n  getStateListReset: () => dispatch(getStateListReset()),\n  getCustomerAddress: params => dispatch(getCustomerAddress(params)),\n  getCustomerAddressReset: () => dispatch(getCustomerAddressReset()),\n  addCustomerAddress: params => dispatch(addCustomerAddress(params)),\n  addCustomerAddressReset: () => dispatch(addCustomerAddressReset()),\n  deleteCustomerAddress: params => dispatch(deleteCustomerAddress(params)),\n  deleteCustomerAddressReset: () => dispatch(deleteCustomerAddressReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/page/Profile/Profile.js"],"names":["React","useEffect","useState","Row","Col","message","Space","Form","Input","Modal","Select","DeleteOutlined","connect","_","GlobleBox","Wrapper","Container","AddressCard","Label","NewAddressCard","AddressValue","Xbadge","ProfileMenu","getCustomerDetail","getCustomerDetailReset","getCustomerAddress","getCustomerAddressReset","addCustomerAddress","addCustomerAddressReset","deleteCustomerAddress","deleteCustomerAddressReset","getCountryList","getCountryListReset","getStateList","getStateListReset","Option","Profile","props","getCustomerDetailState","getCustomerAddresssReset","getCustomerAddressState","deleteCustomerAddressState","addCustomerAddresssReset","addCustomerAddressState","getCountryListState","getStateListState","showModal","setShowModal","visible","loading","countryIndia","setCountryIndia","form","useForm","formData","setFormData","first_name","last_name","company_name","country","country_id","state","city","street","landmark","phone","email","apiState","find","list","name","success","resetFields","error","handleOnChange","e","target","value","handleSelectChange","node","children","handleOnSubmit","validateFields","then","handleOnDelete","id","address_id","handleCancel","padding","display","justifyContent","customer","customer_address","length","color","background","marginBottom","flexFlow","alignItems","map","address","textTransform","zip_code","required","input","option","toLowerCase","indexOf","v","pattern","mapStateToProps","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Row, Col, message, Space, Form, Input, Modal, Select } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { connect } from \"react-redux\"\nimport _ from \"lodash\"\n\n\n/* CUSTOM COMPONENTS */\nimport { GlobleBox, Wrapper } from \"../../component/Xcomponent\"\nimport { Container, AddressCard, Label, NewAddressCard, AddressValue,Xbadge } from \"./ProfileStyle\"\nimport ProfileMenu from '../../component/ProfileMenu/ProfileMenu';\n\n/* ACTIONS */\nimport { getCustomerDetail, getCustomerDetailReset } from \"../../action/getCustomerDetailAction\"\nimport { getCustomerAddress, getCustomerAddressReset } from \"../../action/getCustomerAddressAction\"\nimport { addCustomerAddress, addCustomerAddressReset } from \"../../action/addCustomerAddressAction\"\nimport { deleteCustomerAddress, deleteCustomerAddressReset } from \"../../action/deleteCustomerAddressAction\"\nimport { getCountryList, getCountryListReset } from \"../../action/getCountryListAction\"\nimport { getStateList, getStateListReset } from \"../../action/getStateListAction\"\n\nconst Option = Select.Option\n\nconst Profile = props => {\n    /* variable & state */\n    const {\n        getCustomerDetail, getCustomerDetailReset, getCustomerDetailState,\n        getCustomerAddress, getCustomerAddresssReset, getCustomerAddressState,\n        deleteCustomerAddress, deleteCustomerAddressReset, deleteCustomerAddressState,\n        addCustomerAddress, addCustomerAddresssReset, addCustomerAddressState,\n        getCountryList, getCountryListReset, getCountryListState,\n        getStateList, getStateListReset, getStateListState,\n    } = props\n\n    const [showModal, setShowModal] = useState({\n        visible: false,\n        loading: false\n    })\n\n    const [countryIndia, setCountryIndia] = useState({})\n    const [form] = Form.useForm();\n    const [formData, setFormData] = useState({\n        first_name: \"\",\n        last_name: \"\",\n        company_name: \"\",\n        country: \"\",\n        country_id: \"\",\n        state: \"\",\n        city: \"\",\n        street: \"\",\n        landmark: \"\",\n        phone: \"\",\n        email: \"\",\n    })\n\n    /* callbacks */\n    useEffect(() => {\n        getCountryList({})\n        getCustomerDetail({})\n        getCustomerAddress({})\n    }, [])\n\n    useEffect(() => {\n        if (getCountryListState.apiState === \"success\"){\n            let country = _.find(getCountryListState.list, function(country) {\n                if (country.name === \"India\") {\n                    return true;\n                }\n            })\n            setCountryIndia(country)\n        }\n    }, [getCountryListState])\n\n    useEffect(() => {\n        getStateList({\n            country_id: formData.country_id\n        })\n    }, [formData.country_id])\n\n    useEffect(() => {\n        if (addCustomerAddressState.apiState === \"success\") {\n            message.success(addCustomerAddressState.message);\n            addCustomerAddressReset()\n            setShowModal({ ...showModal, ['visible']: false })\n            setFormData({})\n            getCustomerAddress({})\n            addCustomerAddressReset({})\n            form.resetFields()\n        }\n        else if (addCustomerAddressState.apiState === \"error\") {\n            message.error(\"Something went wrong. Please try later\");\n            addCustomerAddressReset({})\n        }\n    }, [addCustomerAddressState])\n\n    useEffect(() => {\n        if (deleteCustomerAddressState.apiState === \"success\") {\n            message.success(deleteCustomerAddressState.message);\n            deleteCustomerAddressReset()\n            setShowModal({ ...showModal, ['visible']: false })\n            getCustomerAddress({})\n        }\n        else if (deleteCustomerAddressState.apiState === \"error\") {\n            message.error(\"Something went wrong. Please try later\");\n        }\n    }, [deleteCustomerAddressState])\n\n     //Function\n     const handleOnChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n\n    const handleSelectChange = (name, value, node) => {\n        if (name === 'country') {\n            setFormData({ ...formData, [name]: node.children, ['country_id']: value })\n        } else {\n            setFormData({ ...formData, [name]: value })\n        }\n    }\n    \n\n    const handleOnSubmit = () => {\n        form.validateFields().then (()=>{\n        addCustomerAddress({\n            \"company_name\":formData['company_name'],\n            \"country\":formData['country'],\n            \"phone\":formData['phone'],\n            ...formData\n        })})\n        form.resetFields();\n        \n    }\n\n    const handleOnDelete = (id) => {\n        deleteCustomerAddress({\n            address_id: id\n        })  \n    }\n\n    const handleCancel = () => {\n        setShowModal({ ...showModal, ['visible']: false })\n        form.resetFields()\n    }\n\n    return (\n        <GlobleBox>\n            <Wrapper>\n                <Row gutter='12' >\n                    <Col xs={24} sm={24} md={6} lg={6} xl={6} style={{ padding: 16 }} >\n                        <ProfileMenu />\n                    </Col>\n                    <Col xs={24} sm={24} md={18} lg={18} xl={18} style={{ display: 'flex', justifyContent: 'center' }} >\n                        <Container>\n                            <h3>{getCustomerDetailState.customer.name}</h3>\n                            <p>{getCustomerDetailState.customer.email}</p>\n                            { getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length>0 ? <h3 style={{color:\"gray\"}}>Your Saved Addresses</h3> : <h3 style={{color:\"gray\"}}>Please Add an Address</h3> }\n                            <div style={{ background: \"white\", marginBottom: 40, padding: 16 }} >\n                                <Space size=\"large\" style={{ display: \"flex\", flexFlow: \"wrap\" , justifyContent: \"center\", alignItems: \"center\" }}>\n                                    {getCustomerAddressState.apiState == \"success\" && getCustomerAddressState.customer_address.length>0 &&\n                                        <>\n                                            {getCustomerAddressState.customer_address.map(address =>{\n                                            return (\n                                                <AddressCard active={false}>  \n                                                <Xbadge >\n                                                <DeleteOutlined style={{ color: '#bcbcbc' }}  \n                                                onClick={()=>handleOnDelete(address.id)}/>\n                                                </Xbadge>\n                                                <Label>{address.first_name} {address.last_name}</Label><br />\n                                                <AddressValue >{address.street} </AddressValue> <br/>\n                                                {address.landmark != \"\" && (\n                                                            <>\n                                                                <AddressValue>Landmark: {address.landmark} </AddressValue><br />\n                                                            </>\n                                                        )}\n                                                <AddressValue style={{ textTransform: \"uppercase\" }} >{address.city},{address.state}  </AddressValue><br/>\n                                                <AddressValue style={{ textTransform: \"uppercase\" }} >  {address.country} , {address.zip_code}</AddressValue><br />\n                                                <AddressValue>{address.phone}</AddressValue><br />\n                                                {/* <AddressValue>{address.email}</AddressValue> */}\n                                        </AddressCard>)\n                                            })} \n                                        </>\n                                        }\n                                        \n                                        <NewAddressCard onClick={()=>setShowModal({...showModal,['visible']:true})}>\n                                            <Label>Add New Address</Label><br />\n                                        </NewAddressCard>\n                                </Space>\n                            </div>\n                        </Container>\n                        <Modal\n                            visible={showModal.visible}\n                            title=\"Add Address\"\n                            onCancel={handleCancel}\n                            onOk={handleOnSubmit}\n                            okText={\"Add Address\"}\n                            cancelText={\"Cancel\"}\n                        > \n                             <Form  form={form} layout=\"vertical\">\n                            <Row gutter=\"24\">\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                    \n                                        name=\"first_name\"\n                                        label=\"First Name\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"first_name\" placeholder=\"Enter First Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                   \n                                        name=\"last_name\"\n                                        label=\"Last Name\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"last_name\" placeholder=\"Enter Last Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"company_name\"\n                                        label=\"Company Name\"\n                                    >\n                                        <Input name=\"company_name\" placeholder=\"Enter Company Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"country\"\n                                        label=\"Country\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select\n                                            name=\"country\"\n                                            placeholder=\"Select Country\"\n                                            showSearch \n                                            allowClear\n                                            filterOption={(input, option) =>\n                                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            onChange={(v, node) => handleSelectChange(\"country\", v, node)}\n                                        >\n                                            <Option key={countryIndia.id} value={countryIndia.id}>{countryIndia.name}</Option>\n                                            {getCountryListState.list.map(country => (\n                                                <Option key={country.id} value={country.id}>{country.name}</Option>\n                                            ))}\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"state\"\n                                        label=\"State\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select\n                                            name=\"state\"\n                                            placeholder=\"Select State\"\n                                            showSearch\n                                            allowClear\n                                            filterOption={(input, option) =>\n                                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            onChange={(v) => handleSelectChange(\"state\", v)}\n                                        >\n                                            {getStateListState.list.map(state => (\n                                                <Option key={state.name} value={state.name}>{state.name}</Option>\n                                            ))}\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"city\"\n                                        label=\"City\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"city\" placeholder=\"Enter City\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"zip-code\"\n                                        label=\"PIN/ZIP Code\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"zip_code\" placeholder=\"Enter PIN/ZIP CODE\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"street\"\n                                        label=\"Address\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"street\" placeholder=\"Enter Plot/Flat no , Street Name\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"landmark\"\n                                        label=\"Landmark\"\n                                    >\n                                        <Input name=\"landmark\" placeholder=\"Enter Apartment, suite, unit, etc.\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                    style={{ marginBottom: \"6px\" }}\n                                        name=\"phone\"\n                                        label=\"Phone\"\n                                        maxLength={15}\n                                        rules={[\n                                            { required: true, message: 'Maximum 15 digits allowed',\n                                            pattern: /^[+\\da-zA-Z]{0,15}$/, },\n                                            {required: true, message: 'Required',}\n                                        ]}\n                                    >\n                                        <Input name=\"phone\" placeholder=\"Enter Phone\"\n                                            onChange={handleOnChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                \n                            </Row>\n                        </Form>\n                        </Modal>\n                    </Col>\n                </Row>\n            </Wrapper>\n        </GlobleBox>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getCustomerDetailState: state.getCustomerDetail,\n    getCountryListState: state.getCountryList,\n    getStateListState: state.getStateList,\n    getCustomerAddressState: state.getCustomerAddress,\n    addCustomerAddressState: state.addCustomerAddress,\n    deleteCustomerAddressState: state.deleteCustomerAddress,\n})\nconst mapDispatchToProps = (dispatch) => ({\n    getCustomerDetail: (params) => dispatch(getCustomerDetail(params)),\n    getCustomerDetailReset: () => dispatch(getCustomerDetailReset()),\n    getCountryList: (params) => dispatch(getCountryList(params)),\n    getCountryListReset: () => dispatch(getCountryListReset()),\n    getStateList: (params) => dispatch(getStateList(params)),\n    getStateListReset: () => dispatch(getStateListReset()),\n    getCustomerAddress: (params) => dispatch(getCustomerAddress(params)),\n    getCustomerAddressReset: () => dispatch(getCustomerAddressReset()),    \n    addCustomerAddress: (params) => dispatch(addCustomerAddress(params)),\n    addCustomerAddressReset: () => dispatch(addCustomerAddressReset()),\n    deleteCustomerAddress: (params) => dispatch(deleteCustomerAddress(params)),\n    deleteCustomerAddressReset: () => dispatch(deleteCustomerAddressReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\n"]},"metadata":{},"sourceType":"module"}