{"ast":null,"code":"import _defineProperty from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/coder-kabir/Documents/GitHub/Vemshala/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useMediaQuery}from'react-responsive';import{connect}from\"react-redux\";import{Form,Input,Divider,message}from\"antd\";import{Link,useLocation}from\"react-router-dom\";import{HeartOutlined,UserOutlined,UnorderedListOutlined,LogoutOutlined,GoogleOutlined}from\"@ant-design/icons\";/* custom component */import{AccDrawer,AccountLi,AccountUl}from\"./AccountDrawerStyle\";import{BlackBtn,RedBtn}from\"../../component/Xcomponent\";import GoogleLogin from\"react-google-login\";import GoogleButton from'react-google-button';/* actions */import{toggleSignupModal as _toggleSignupModal,setCustomerData as _setCustomerData,setUserLoggedIn as _setUserLoggedIn,setUserLoggedOut as _setUserLoggedOut,hideSignupModal as _hideSignupModal,showSignupModal as _showSignupModal}from\"../../action/generalAction\";import{login as _login,loginReset as _loginReset}from\"../../action/loginAction\";import{createCustomer as _createCustomer,createCustomerReset as _createCustomerReset}from\"../../action/createCustomerAction\";/* other */import{getCustomer,setToken,setCustomer,removeCustomer,removeToken,getCartId}from'../../utils';var AccountDrawer=function AccountDrawer(props){/* variable and state */var location=useLocation();var toggleSignupModal=props.toggleSignupModal,showSignupModal=props.showSignupModal,hideSignupModal=props.hideSignupModal,setCustomerData=props.setCustomerData,setUserLoggedIn=props.setUserLoggedIn,setUserLoggedOut=props.setUserLoggedOut,generalState=props.generalState,login=props.login,loginReset=props.loginReset,loginState=props.loginState,createCustomer=props.createCustomer,createCustomerReset=props.createCustomerReset,createCustomerState=props.createCustomerState;var isMobile=useMediaQuery({query:'(max-width: 800px)'});var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];/* callback */useEffect(function(){setCustomerData({customer:getCustomer()});},[]);useEffect(function(){if(loginState.apiState===\"error\"){message.error(loginState.message);loginReset();}if(loginState.apiState===\"success\"){message.success(loginState.message);setToken(loginState.token);props.onClose();setUserLoggedIn();setCustomer(loginState.customer);setCustomerData({customer:loginState.customer});loginReset();}},[loginState]);useEffect(function(){if(createCustomerState.apiState===\"error\"){message.error(createCustomerState.message);// message.error(\"Something went wrong. Please try later\");\n}if(createCustomerState.apiState===\"success\"){props.onClose(true);console.log(createCustomerState.customer.signup_method);if(createCustomerState.customer.signup_method===\"website\"){hideSignupModal();}message.success(createCustomerState.message);setToken(createCustomerState.token);setUserLoggedIn();setCustomer(createCustomerState.customer);setCustomerData({customer:createCustomerState.customer});createCustomerReset();}},[createCustomerState]);/* function */var handleInputChange=function handleInputChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var handleSubmit=function handleSubmit(){login(_objectSpread({cart_id:getCartId()},formData));};var handleLogout=function handleLogout(){message.success(\"You are logged out successfully.\");removeToken();props.onClose();setUserLoggedOut();removeCustomer();setCustomerData({customer:null});};var responseGoogle=function responseGoogle(response){if(response.type===\"error\"){return false;}console.log(\"response:\",response);createCustomer({signup_method:\"google\",name:response.profileObj.name,email:response.profileObj.email,id_token:response.tokenObj.id_token});};return/*#__PURE__*/React.createElement(AccDrawer,{title:\"ACCOUNT\",placement:\"right\",visible:props.accountVisible,onClose:function onClose(){return props.onClose();},width:isMobile?\"90%\":450},!generalState.isUserLoginIn&&/*#__PURE__*/React.createElement(\"div\",{style:{padding:\"0px 40px\"}},/*#__PURE__*/React.createElement(Form,{layout:\"vertical\",onFinish:handleSubmit},/*#__PURE__*/React.createElement(Form.Item,{name:\"email\",label:\"Email\",rules:[{required:true,message:'Required'},{type:'email',message:'Email is not valid'}]},/*#__PURE__*/React.createElement(Input,{name:\"email\",placeholder:\"Email\",size:\"large\",onChange:handleInputChange})),/*#__PURE__*/React.createElement(Form.Item,{name:\"password\",label:\"Password\",rules:[{required:true,message:'Required'}]},/*#__PURE__*/React.createElement(Input.Password,{name:\"password\",placeholder:\"Password\",size:\"large\",onChange:handleInputChange})),/*#__PURE__*/React.createElement(BlackBtn,{type:\"primary\",block:true,size:\"large\",htmlType:\"submit\",loading:loginState.apiState===\"loading\"},\"LOGIN\"),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"flex-end\"}},/*#__PURE__*/React.createElement(Link,{to:\"/forgot-password\",onClick:function onClick(){props.onClose(false);}},\"Forgot Password?\"))),/*#__PURE__*/React.createElement(Divider,{plain:true},\"OR\"),/*#__PURE__*/React.createElement(GoogleLogin,{clientId:\"15117413891-dgacpafu1fiicn3tqkr9jqv6uch2q3sp.apps.googleusercontent.com\",buttonText:\"Login\",onSuccess:responseGoogle,onFailure:responseGoogle,cookiePolicy:\"single_host_origin\",render:function render(renderProps){return/*#__PURE__*/React.createElement(GoogleButton,{style:{width:\"100%\"},onClick:renderProps.onClick,disabled:renderProps.disabled},\"Sign in with Google\");}}),/*#__PURE__*/React.createElement(Divider,{plain:true},\"OR\"),/*#__PURE__*/React.createElement(BlackBtn,{type:\"primary\",block:true,size:\"large\",onClick:function onClick(){props.onClose(false);showSignupModal();}},\"Create an Account\"),/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:8}},/*#__PURE__*/React.createElement(\"p\",{style:{fontSize:12}},\"Thanks to your Piky account, you will be able to:\"),/*#__PURE__*/React.createElement(\"ul\",{style:{fontSize:12}},/*#__PURE__*/React.createElement(\"li\",null,\"Access your shopping cart\"),/*#__PURE__*/React.createElement(\"li\",null,\"Save your billing and delivery information to order faster\"),/*#__PURE__*/React.createElement(\"li\",null,\"Manage your address book\"),/*#__PURE__*/React.createElement(\"li\",null,\"Access all your orders and download the related invoices\"),/*#__PURE__*/React.createElement(\"li\",null,\"Manage your newsletter subscription\"),/*#__PURE__*/React.createElement(\"li\",null,\"Update your personal data\"))),/*#__PURE__*/React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"column\",marginTop:32,fontSize:12}},/*#__PURE__*/React.createElement(\"h3\",{style:{alignSelf:\"center\"}},\"HERE TO HELP\"),/*#__PURE__*/React.createElement(\"span\",null,\"Have a question? You may find an answer in our FAQs.\"),/*#__PURE__*/React.createElement(\"span\",null,\"But you can also contact us:\"),/*#__PURE__*/React.createElement(\"h3\",{style:{marginTop:12}},\"Customer Service\"),/*#__PURE__*/React.createElement(\"span\",null,\"Call 0000-000-000\"),/*#__PURE__*/React.createElement(\"span\",null,\"Monday through Friday: 9am - 6pm ET\"),/*#__PURE__*/React.createElement(\"span\",null,\"Saturday: 10am - 6pm ET\"),/*#__PURE__*/React.createElement(\"span\",null,\"Send us an email\"))));};var mapStateToProps=function mapStateToProps(state){return{generalState:state.general,loginState:state.login,createCustomerState:state.createCustomer};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleSignupModal:function toggleSignupModal(){return dispatch(_toggleSignupModal());},showSignupModal:function showSignupModal(){return dispatch(_showSignupModal());},hideSignupModal:function hideSignupModal(){return dispatch(_hideSignupModal());},setCustomerData:function setCustomerData(params){return dispatch(_setCustomerData(params));},login:function login(params){return dispatch(_login(params));},loginReset:function loginReset(){return dispatch(_loginReset());},createCustomer:function createCustomer(params){return dispatch(_createCustomer(params));},createCustomerReset:function createCustomerReset(){return dispatch(_createCustomerReset());},setUserLoggedIn:function setUserLoggedIn(){return dispatch(_setUserLoggedIn());},setUserLoggedOut:function setUserLoggedOut(){return dispatch(_setUserLoggedOut());}};};export default connect(mapStateToProps,mapDispatchToProps)(AccountDrawer);","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/component/AccountDrawer/AccountDrawer.js"],"names":["React","useEffect","useState","useMediaQuery","connect","Form","Input","Divider","message","Link","useLocation","HeartOutlined","UserOutlined","UnorderedListOutlined","LogoutOutlined","GoogleOutlined","AccDrawer","AccountLi","AccountUl","BlackBtn","RedBtn","GoogleLogin","GoogleButton","toggleSignupModal","setCustomerData","setUserLoggedIn","setUserLoggedOut","hideSignupModal","showSignupModal","login","loginReset","createCustomer","createCustomerReset","getCustomer","setToken","setCustomer","removeCustomer","removeToken","getCartId","AccountDrawer","props","location","generalState","loginState","createCustomerState","isMobile","query","email","password","formData","setFormData","customer","apiState","error","success","token","onClose","console","log","signup_method","handleInputChange","e","target","name","value","handleSubmit","cart_id","handleLogout","responseGoogle","response","type","profileObj","id_token","tokenObj","accountVisible","isUserLoginIn","padding","required","display","justifyContent","renderProps","width","onClick","disabled","marginTop","fontSize","flexDirection","alignSelf","mapStateToProps","state","general","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMediaQuery } from 'react-responsive'\nimport { connect } from \"react-redux\"\nimport { Form, Input, Divider, message } from \"antd\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport {\n    HeartOutlined, UserOutlined,\n    UnorderedListOutlined, LogoutOutlined, GoogleOutlined\n} from \"@ant-design/icons\"\n/* custom component */\nimport { AccDrawer, AccountLi, AccountUl } from \"./AccountDrawerStyle\"\nimport { BlackBtn, RedBtn } from \"../../component/Xcomponent\"\nimport GoogleLogin from \"react-google-login\";\nimport GoogleButton from 'react-google-button'\n/* actions */\nimport { toggleSignupModal, setCustomerData, setUserLoggedIn, setUserLoggedOut, hideSignupModal, showSignupModal } from \"../../action/generalAction\"\nimport { login, loginReset } from \"../../action/loginAction\"\nimport { createCustomer, createCustomerReset } from \"../../action/createCustomerAction\"\n/* other */\nimport { getCustomer, setToken, setCustomer, removeCustomer, removeToken, getCartId } from '../../utils'\n\nconst AccountDrawer = props => {\n    /* variable and state */\n    const location = useLocation();\n    const {\n        toggleSignupModal, showSignupModal, hideSignupModal, setCustomerData, setUserLoggedIn, setUserLoggedOut, generalState,\n        login, loginReset, loginState,\n        createCustomer, createCustomerReset, createCustomerState,\n    } = props\n    const isMobile = useMediaQuery({ query: '(max-width: 800px)' })\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    /* callback */\n    useEffect(() => {\n        setCustomerData({\n            customer: getCustomer()\n        })\n    }, [])\n\n    useEffect(() => {\n        if (loginState.apiState === \"error\") {\n            message.error(loginState.message);\n            loginReset()\n        }\n        if (loginState.apiState === \"success\") {\n            message.success(loginState.message);\n            setToken(loginState.token)\n            props.onClose()\n            setUserLoggedIn()\n            setCustomer(loginState.customer)\n            setCustomerData({\n                customer: loginState.customer\n            })\n            loginReset()\n        }\n    }, [loginState])\n\n    useEffect(() => {\n        if (createCustomerState.apiState === \"error\") {\n            message.error(createCustomerState.message);\n            // message.error(\"Something went wrong. Please try later\");\n        }\n        if (createCustomerState.apiState === \"success\") {\n            props.onClose(true)\n            console.log(createCustomerState.customer.signup_method)\n            if (createCustomerState.customer.signup_method === \"website\") {\n                hideSignupModal()\n            }\n            message.success(createCustomerState.message);\n            setToken(createCustomerState.token)\n            setUserLoggedIn()\n            setCustomer(createCustomerState.customer)\n            setCustomerData({\n                customer: createCustomerState.customer\n            })\n            createCustomerReset()\n\n        }\n    }, [createCustomerState])\n\n    /* function */\n    const handleInputChange = e => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = () => {\n        login({\n            cart_id: getCartId(),\n            ...formData\n        })\n    }\n\n    const handleLogout = () => {\n        message.success(\"You are logged out successfully.\");\n        removeToken()\n        props.onClose()\n        setUserLoggedOut()\n        removeCustomer()\n        setCustomerData({\n            customer: null\n        })\n    }\n    const responseGoogle = (response) => {\n        if (response.type === \"error\") {\n            return false;\n        }\n        console.log(\"response:\", response)\n        createCustomer({\n            signup_method: \"google\",\n            name: response.profileObj.name,\n            email: response.profileObj.email,\n            id_token: response.tokenObj.id_token,\n        });\n    };\n\n    return (\n        <AccDrawer\n            title=\"ACCOUNT\"\n            placement=\"right\"\n            visible={props.accountVisible}\n            onClose={() => props.onClose()}\n            width={isMobile ? \"90%\" : 450}\n        >\n            {!generalState.isUserLoginIn &&\n                <div style={{ padding: \"0px 40px\" }} >\n                    <Form\n                        layout=\"vertical\"\n                        onFinish={handleSubmit}\n                    >\n                        <Form.Item\n                            name=\"email\"\n                            label=\"Email\"\n                            rules={[\n                                { required: true, message: 'Required' },\n                                { type: 'email', message: 'Email is not valid' },\n                            ]}\n                        >\n                            <Input name=\"email\" placeholder=\"Email\" \n                                size='large'\n                                onChange={handleInputChange}\n                            />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            label=\"Password\"\n                            rules={[\n                                { required: true, message: 'Required' },\n                            ]}\n                        >\n                            <Input.Password name=\"password\" placeholder=\"Password\"\n                                size='large'\n                                onChange={handleInputChange}\n                            />\n                        </Form.Item>\n                        <BlackBtn type=\"primary\" block size=\"large\" htmlType=\"submit\"\n                            loading={loginState.apiState === \"loading\"}\n                        >LOGIN</BlackBtn>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }} >\n                            <Link to=\"/forgot-password\"\n                                onClick={() => {\n                                    props.onClose(false)\n                                }}\n                            >Forgot Password?</Link>\n                        </div>\n                    </Form>\n                    <Divider plain>OR</Divider>\n\n                    <GoogleLogin\n                        clientId=\"15117413891-dgacpafu1fiicn3tqkr9jqv6uch2q3sp.apps.googleusercontent.com\"\n                        buttonText=\"Login\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={\"single_host_origin\"}\n                        render={renderProps => (\n                            <GoogleButton style={{ width: \"100%\" }} onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign in with Google</GoogleButton>\n                        )}\n                    />\n                    <Divider plain>OR</Divider>\n\n                    <BlackBtn type=\"primary\" block size=\"large\"\n                        onClick={() => {\n                            props.onClose(false)\n                            showSignupModal()\n                        }}\n                    >Create an Account</BlackBtn>\n                    <div style={{ marginTop: 8 }} >\n                        <p style={{ fontSize: 12 }} >Thanks to your Piky account, you will be able to:</p>\n                        <ul style={{ fontSize: 12 }} >\n                            <li>Access your shopping cart</li>\n                            <li>Save your billing and delivery information to order faster</li>\n                            <li>Manage your address book</li>\n                            <li>Access all your orders and download the related invoices</li>\n                            <li>Manage your newsletter subscription</li>\n                            <li>Update your personal data</li>\n                        </ul>\n                    </div>\n\n                    <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: 32, fontSize: 12 }} >\n                        <h3 style={{ alignSelf: \"center\" }} >HERE TO HELP</h3>\n                        <span>Have a question? You may find an answer in our FAQs.</span>\n                        <span>But you can also contact us:</span>\n                        <h3 style={{ marginTop: 12 }} >Customer Service</h3>\n                        <span>Call 0000-000-000</span>\n                        <span>Monday through Friday: 9am - 6pm ET</span>\n                        <span>Saturday: 10am - 6pm ET</span>\n                        <span>Send us an email</span>\n                    </div>\n                </div>\n            }\n\n        </AccDrawer>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    generalState: state.general,\n    loginState: state.login,\n    createCustomerState: state.createCustomer,\n})\nconst mapDispatchToProps = (dispatch) => ({\n    toggleSignupModal: () => dispatch(toggleSignupModal()),\n    showSignupModal: () => dispatch(showSignupModal()),\n    hideSignupModal: () => dispatch(hideSignupModal()),\n    setCustomerData: (params) => dispatch(setCustomerData(params)),\n    login: (params) => dispatch(login(params)),\n    loginReset: () => dispatch(loginReset()),\n    createCustomer: (params) => dispatch(createCustomer(params)),\n    createCustomerReset: () => dispatch(createCustomerReset()),\n    setUserLoggedIn: () => dispatch(setUserLoggedIn()),\n    setUserLoggedOut: () => dispatch(setUserLoggedOut()),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountDrawer)"]},"metadata":{},"sourceType":"module"}