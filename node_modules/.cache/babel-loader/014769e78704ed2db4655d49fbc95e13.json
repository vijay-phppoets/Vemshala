{"ast":null,"code":"var _jsxFileName = \"/home/coder-kabir/Documents/GitHub/Vemshala/src/component/TopBar/TopBar.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\"; // custom component\n\nimport { Container, CloseBtnContainer } from \"./TopBarStyle\";\nimport { setOfferStrip, getOfferStrip } from \"../../utils\"; // action\n\nimport { getOffer } from \"../../action/getOfferAction\";\n\nconst TopBar = props => {\n  const {\n    getOffer,\n    getOfferState\n  } = props;\n  const [topBarView, setTopBarView] = useState(\"yes\"); // Callback\n\n  useEffect(() => {\n    getOffer();\n  }, []);\n\n  const handleClose = () => {\n    setOfferStrip(\"no\");\n    setTopBarView(\"no\");\n  };\n\n  let strip = getOfferStrip();\n  strip = !strip ? \"yes\" : strip;\n  setOfferStrip(strip);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, getOfferStrip() === \"yes\" ? /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, getOfferState.message, /*#__PURE__*/React.createElement(CloseBtnContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: () => handleClose(),\n    className: \"close-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }))) : \"\");\n};\n\nconst mapStateToProps = state => ({\n  getOfferState: state.getOffer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getOffer: params => dispatch(getOffer(params))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);","map":{"version":3,"sources":["/home/coder-kabir/Documents/GitHub/Vemshala/src/component/TopBar/TopBar.js"],"names":["React","useEffect","useState","CloseOutlined","connect","Container","CloseBtnContainer","setOfferStrip","getOfferStrip","getOffer","TopBar","props","getOfferState","topBarView","setTopBarView","handleClose","strip","message","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,eAA7C;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,aAA7C,C,CACA;;AACA,SAASC,QAAT,QAAyB,6BAAzB;;AACA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB,QAAM;AACFF,IAAAA,QADE;AACQG,IAAAA;AADR,MAEFD,KAFJ;AAGA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C,CAJoB,CAMpB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACtBR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAO,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAIA,MAAIE,KAAK,GAAGR,aAAa,EAAzB;AACAQ,EAAAA,KAAK,GAAG,CAACA,KAAD,GAAS,KAAT,GAAiBA,KAAzB;AACAT,EAAAA,aAAa,CAACS,KAAD,CAAb;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,aAAa,OAAO,KAApB,gBACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,aAAa,CAACK,OADnB,eAEI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAE,MAAMF,WAAW,EAAtC;AAA0C,IAAA,SAAS,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADH,GAOK,EARV,CADJ;AAaH,CA/BD;;AAgCA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,aAAa,EAAEO,KAAK,CAACV;AADW,CAAZ,CAAxB;;AAGA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACtCZ,EAAAA,QAAQ,EAAGa,MAAD,IAAYD,QAAQ,CAACZ,QAAQ,CAACa,MAAD,CAAT;AADQ,CAAf,CAA3B;;AAGA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { CloseOutlined } from \"@ant-design/icons\"\nimport { connect } from \"react-redux\"\n// custom component\nimport { Container, CloseBtnContainer } from \"./TopBarStyle\"\nimport { setOfferStrip, getOfferStrip } from \"../../utils\"\n// action\nimport { getOffer } from \"../../action/getOfferAction\"\nconst TopBar = props => {\n    const {\n        getOffer, getOfferState,\n    } = props\n    const [topBarView, setTopBarView] = useState(\"yes\")\n\n    // Callback\n    useEffect(() => {\n        getOffer()\n    }, [])\n\n    const handleClose = () => {\n        setOfferStrip(\"no\")\n        setTopBarView(\"no\")\n    }\n    let strip = getOfferStrip();\n    strip = !strip ? \"yes\" : strip;\n    setOfferStrip(strip);\n    return (\n        <div>\n            {getOfferStrip() === \"yes\" ?\n                <Container>\n                    {getOfferState.message}\n                    <CloseBtnContainer>\n                        <a href=\"#\" onClick={() => handleClose()} className=\"close-button\"></a>\n                    </CloseBtnContainer>\n                </Container>\n                : \"\"\n            }\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    getOfferState: state.getOffer,\n})\nconst mapDispatchToProps = (dispatch) => ({\n    getOffer: (params) => dispatch(getOffer(params)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar)"]},"metadata":{},"sourceType":"module"}